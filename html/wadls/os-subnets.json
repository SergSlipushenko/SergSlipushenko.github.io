{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"/v2.0/subnets{?display_name,network_id,gateway_ip,ip_version,cidr,id,enable_dhcp,ipv6_ra_mode,ipv6_address_mode}", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List subnets", "description":"\n Lists subnets to which the\n specified tenant has access.\n Default policy settings returns exclusively subnets\n owned by the tenant submitting the request, unless the\n request is submitted by a user with administrative\n rights. You can control which attributes are returned\n by using the fields query parameter. You can filter\n results by using query string parameters.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnets\": [\n {\n \"name\": \"private-subnet\",\n \"enable_dhcp\": true,\n \"network_id\": \"db193ab3-96e3-4cb3-8fc5-05f4296d0324\",\n \"tenant_id\": \"26a7980765d0414dbc1fc1f88cdb7e6e\",\n \"dns_nameservers\": [],\n \"allocation_pools\": [\n {\n \"start\": \"10.0.0.2\",\n \"end\": \"10.0.0.254\"\n }\n ],\n \"host_routes\": [],\n \"ip_version\": 4,\n \"gateway_ip\": \"10.0.0.1\",\n \"cidr\": \"10.0.0.0\/24\",\n \"id\": \"08eae331-0402-425a-923c-34f7cfe39c1b\"\n },\n {\n \"name\": \"my_subnet\",\n \"enable_dhcp\": true,\n \"network_id\": \"d32019d3-bc6e-4319-9c1d-6722fc136a22\",\n \"tenant_id\": \"4fd44f30292945e481c7b8a0c8908869\",\n \"dns_nameservers\": [],\n \"allocation_pools\": [\n {\n \"start\": \"192.0.0.2\",\n \"end\": \"192.255.255.254\"\n }\n ],\n \"host_routes\": [],\n \"ip_version\": 4,\n \"gateway_ip\": \"192.0.0.1\",\n \"cidr\": \"192.0.0.0\/8\",\n \"id\": \"54d6f61d-db07-451c-9ab3-b9609b6b6f0b\"\n }\n ]\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnets>\n <subnet>\n <name>private-subnet<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>db193ab3-96e3-4cb3-8fc5-05f4296d0324<\/network_id>\n <tenant_id>26a7980765d0414dbc1fc1f88cdb7e6e<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>10.0.0.2<\/start>\n <end>10.0.0.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>10.0.0.1<\/gateway_ip>\n <cidr>10.0.0.0\/24<\/cidr>\n <id>08eae331-0402-425a-923c-34f7cfe39c1b<\/id>\n <\/subnet>\n <subnet>\n <name>my_subnet<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>d32019d3-bc6e-4319-9c1d-6722fc136a22<\/network_id>\n <tenant_id>4fd44f30292945e481c7b8a0c8908869<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>192.0.0.2<\/start>\n <end>192.255.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>192.0.0.1<\/gateway_ip>\n <cidr>192.0.0.0\/8<\/cidr>\n <id>54d6f61d-db07-451c-9ab3-b9609b6b6f0b<\/id>\n <\/subnet>\n<\/subnets>\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create subnet", "description":"\n Creates a subnet on a specified\n network.\n OpenStack Networking does not try\n to derive the correct IP version from the specified\n CIDR. If you do not specify the gateway_ip attribute,\n OpenStack Networking allocates an address from the\n CIDR for the gateway for the subnet.\n To specify a subnet without a gateway, set the\n gateway_ip attribute to\n null in the request body. If you do not specify the\n allocation_pools attribute, OpenStack Networking\n automatically allocates pools for covering all IP addresses in\n the CIDR, excluding the address reserved for the subnet\n gateway. Otherwise, you can explicitly specify allocation\n pools as shown in the following example.\n When you specify both the allocation_pools and\n gateway_ip attributes, you must ensure that the gateway IP does not\n overlap with the specified allocation pools; otherwise\n a 409 Conflict error occurs.\n A subnet can have one or more name servers and host routes.\n Hosts in this subnet use the specified\n name servers. Devices with IP addresses from this subnet, not\n including the local subnet route, use the specified host routes.\n Specify the ipv6_ra_mode and\n ipv6_address_mode attributes to create subnets\n that support IPv6 configurations, such as Stateless Address\n Autoconfiguration (SLAAC), DHCPv6 Stateful, and DHCPv6\n Stateless configurations.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet\": {\n \"network_id\": \"d32019d3-bc6e-4319-9c1d-6722fc136a22\",\n \"ip_version\": 4,\n \"cidr\": \"10.0.0.1\"\n }\n}\n", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnet>\n <network_id>d32019d3-bc6e-4319-9c1d-6722fc136a22<\/network_id>\n <ip_version>4<\/ip_version>\n <cidr>10.0.0.1<\/cidr>\n<\/subnet>\n", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet\": {\n \"name\": \"\",\n \"enable_dhcp\": true,\n \"network_id\": \"d32019d3-bc6e-4319-9c1d-6722fc136a22\",\n \"tenant_id\": \"4fd44f30292945e481c7b8a0c8908869\",\n \"dns_nameservers\": [],\n \"allocation_pools\": [\n {\n \"start\": \"192.168.199.2\",\n \"end\": \"192.168.199.254\"\n }\n ],\n \"host_routes\": [],\n \"ip_version\": 4,\n \"gateway_ip\": \"192.168.199.1\",\n \"cidr\": \"192.168.199.0\/24\",\n \"id\": \"3b80198d-4f7b-4f77-9ef5-774d54e17126\"\n }\n}\n", "schema":"" }, { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnet>\n <name>test_subnet_1<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>d32019d3-bc6e-4319-9c1d-6722fc136a22<\/network_id>\n <tenant_id>4fd44f30292945e481c7b8a0c8908869<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>192.0.0.2<\/start>\n <end>192.255.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>192.0.0.1<\/gateway_ip>\n <cidr>192.0.0.0\/8<\/cidr>\n <id>54d6f61d-db07-451c-9ab3-b9609b6b6f0b<\/id>\n<\/subnet>\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Bulk create subnet", "description":"\n Creates multiple subnets in a\n single request. Specify a list of subnets in the\n request body.\n The bulk create operation is always atomic. Either\n all or no subnets in the request body are\n created.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnets\": [\n {\n \"cidr\": \"192.168.199.0\/24\",\n \"ip_version\": 4,\n \"network_id\": \"e6031bc2-901a-4c66-82da-f4c32ed89406\"\n },\n {\n \"cidr\": \"10.56.4.0\/22\",\n \"ip_version\": 4,\n \"network_id\": \"64239a54-dcc4-4b39-920b-b37c2144effa\"\n }\n ]\n}\n", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<subnets>\n <subnet>\n <name>test_subnet_1<\/name>\n <network_id>a3775a7d-9f8b-4148-be81-c84bbd0837ce<\/network_id>\n <cidr>10.0.0.0\/8<\/cidr>\n <ip_version>4<\/ip_version>\n <\/subnet>\n <subnet>\n <name>test_subnet_2<\/name>\n <network_id>a3775a7d-9f8b-4148-be81-c84bbd0837ce<\/network_id>\n <cidr>192.168.0.0\/16<\/cidr>\n <ip_version>4<\/ip_version>\n <\/subnet>\n<\/subnets>\n", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnets\": [\n {\n \"allocation_pools\": [\n {\n \"end\": \"192.168.199.254\",\n \"start\": \"192.168.199.2\"\n }\n ],\n \"cidr\": \"192.168.199.0\/24\",\n \"dns_nameservers\": [],\n \"enable_dhcp\": true,\n \"gateway_ip\": \"192.168.199.1\",\n \"host_routes\": [],\n \"id\": \"0468a7a7-290d-4127-aedd-6c9449775a24\",\n \"ip_version\": 4,\n \"name\": \"\",\n \"network_id\": \"e6031bc2-901a-4c66-82da-f4c32ed89406\",\n \"tenant_id\": \"d19231fc08ec4bc4829b668040d34512\"\n },\n {\n \"allocation_pools\": [\n {\n \"end\": \"10.56.7.254\",\n \"start\": \"10.56.4.2\"\n }\n ],\n \"cidr\": \"10.56.4.0\/22\",\n \"dns_nameservers\": [],\n \"enable_dhcp\": true,\n \"gateway_ip\": \"10.56.4.1\",\n \"host_routes\": [],\n \"id\": \"b0e7435c-1512-45fb-aa9e-9a7c5932fb30\",\n \"ip_version\": 4,\n \"name\": \"\",\n \"network_id\": \"64239a54-dcc4-4b39-920b-b37c2144effa\",\n \"tenant_id\": \"d19231fc08ec4bc4829b668040d34512\"\n }\n ]\n}\n", "schema":"" }, { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnets>\n <subnet>\n <name>test_subnet_1<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>a3775a7d-9f8b-4148-be81-c84bbd0837ce<\/network_id>\n <tenant_id>60cd4f6dbc2f491982a284e7b83b5be3<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>10.0.0.2<\/start>\n <end>10.255.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>10.0.0.1<\/gateway_ip>\n <cidr>10.0.0.0\/8<\/cidr>\n <id>bd3fd365-fe19-431a-be63-07017a09316c<\/id>\n <\/subnet>\n <subnet>\n <name>test_subnet_2<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>a3775a7d-9f8b-4148-be81-c84bbd0837ce<\/network_id>\n <tenant_id>60cd4f6dbc2f491982a284e7b83b5be3<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>192.168.0.2<\/start>\n <end>192.168.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>192.168.0.1<\/gateway_ip>\n <cidr>192.168.0.0\/16<\/cidr>\n <id>86e7c838-fb75-402b-9dbf-d68166e3f5fe<\/id>\n <\/subnet>\n<\/subnets>\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2.0/subnets/{subnet_id}", "parameters":{ "subnet_id":{ "description":"\n The UUID for the subnet of\n interest to you.\n", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show subnet", "description":"\n Shows information for a specified\n subnet.\n Use the fields query parameter to filter the results.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet\": {\n \"name\": \"my_subnet\",\n \"enable_dhcp\": true,\n \"network_id\": \"d32019d3-bc6e-4319-9c1d-6722fc136a22\",\n \"tenant_id\": \"4fd44f30292945e481c7b8a0c8908869\",\n \"dns_nameservers\": [],\n \"allocation_pools\": [\n {\n \"start\": \"192.0.0.2\",\n \"end\": \"192.255.255.254\"\n }\n ],\n \"host_routes\": [],\n \"ip_version\": 4,\n \"gateway_ip\": \"192.0.0.1\",\n \"cidr\": \"192.0.0.0\/8\",\n \"id\": \"54d6f61d-db07-451c-9ab3-b9609b6b6f0b\"\n }\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnet>\n <name>test_subnet_1<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>d32019d3-bc6e-4319-9c1d-6722fc136a22<\/network_id>\n <tenant_id>4fd44f30292945e481c7b8a0c8908869<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>192.0.0.2<\/start>\n <end>192.255.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>192.0.0.1<\/gateway_ip>\n <cidr>192.0.0.0\/8<\/cidr>\n <id>54d6f61d-db07-451c-9ab3-b9609b6b6f0b<\/id>\n<\/subnet>\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update subnet", "description":"\n Updates a specified subnet.\n Some attributes, such as IP version (ip_version),\n and CIDR (cidr) cannot be updated. Attempting to\n update these attributes results in a 400 Bad\n Request error.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet\": {\n \"name\": \"my_subnet\"\n }\n}\n", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<subnet>\n <name>my_subnet<\/name>\n<\/subnet>\n", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet\": {\n \"name\": \"my_subnet\",\n \"enable_dhcp\": true,\n \"network_id\": \"db193ab3-96e3-4cb3-8fc5-05f4296d0324\",\n \"tenant_id\": \"26a7980765d0414dbc1fc1f88cdb7e6e\",\n \"dns_nameservers\": [],\n \"allocation_pools\": [\n {\n \"start\": \"10.0.0.2\",\n \"end\": \"10.0.0.254\"\n }\n ],\n \"host_routes\": [],\n \"ip_version\": 4,\n \"gateway_ip\": \"10.0.0.1\",\n \"cidr\": \"10.0.0.0\/24\",\n \"id\": \"08eae331-0402-425a-923c-34f7cfe39c1b\"\n }\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version='1.0' encoding='UTF-8'?>\n<subnet>\n <name>my_subnet<\/name>\n <enable_dhcp>True<\/enable_dhcp>\n <network_id>d32019d3-bc6e-4319-9c1d-6722fc136a22<\/network_id>\n <tenant_id>4fd44f30292945e481c7b8a0c8908869<\/tenant_id>\n <dns_nameservers\/>\n <allocation_pools>\n <allocation_pool>\n <start>192.0.0.2<\/start>\n <end>192.255.255.254<\/end>\n <\/allocation_pool>\n <\/allocation_pools>\n <host_routes\/>\n <ip_version>4<\/ip_version>\n <gateway_ip>192.0.0.1<\/gateway_ip>\n <cidr>192.0.0.0\/8<\/cidr>\n <id>54d6f61d-db07-451c-9ab3-b9609b6b6f0b<\/id>\n<\/subnet>\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete subnet", "description":"\n Deletes a specified subnet.\n The operation fails if subnet IP addresses are still\n allocated.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }