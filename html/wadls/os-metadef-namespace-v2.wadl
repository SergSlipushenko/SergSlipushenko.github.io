<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2015 OpenStack Foundation, All Rights Reserved -->
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entities with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent os-image-2.2.wadl               -->
<!--*******************************************************-->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <wadl:grammars xmlns:db="http://docbook.org/ns/docbook"
                  xmlns="http://wadl.dev.java.net/2009/02">
      <wadl:include href="60363-os-metadef-namespace-v2-xsd-1.xsd"/>
      <wadl:include href="60363-os-metadef-namespace-v2-xsd-2.xsd"/>
   </wadl:grammars>
    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->
    <resources xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:db="http://docbook.org/ns/docbook"
              xmlns:common="http://docs.openstack.org/common/api/v1.0"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:imageapi="http://docs.openstack.org/image/api/v2"
              xmlns:csapi="http://docs.openstack.org/image/api/v2"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://glance.example.com/"
              xml:id="os-metadef-namespace-v2">
        <resource id="namespaces" path="/v2/metadefs/namespaces">
         <method name="POST" rax:id="createNamespace-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create namespace">
               <para role="shortdesc">
                Creates a namespace.
            </para>
               <para>
                The namespace is created with a <code>Location</code> header
                that contains the newly-created URI for the namespace.
            </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="image">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "description": "Choose capabilities that should be provided by the Compute Host. This provides the ability to fine tune the hardware specification required when a new vm is requested.",
    "display_name": "Hypervisor Selection",
    "namespace": "OS::Compute::Hypervisor",
    "properties": {
        "hypervisor_type": {
            "description": "The hypervisor type.",
            "enum": [
                "xen",
                "qemu",
                "kvm",
                "lxc",
                "uml",
                "vmware",
                "hyperv"
            ],
            "title": "Hypervisor Type",
            "type": "string"
        },
        "vm_mode": {
            "description": "The virtual machine mode.",
            "enum": [
                "hvm",
                "xen",
                "uml",
                "exe"
            ],
            "title": "VM Mode",
            "type": "string"
        }
    },
    "protected": true,
    "resource_type_associations": [
        {
            "name": "OS::Glance::Image"
        }
    ],
    "visibility": "public"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="namespace"
                         style="plain"
                         type="xsd:string"
                         required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            A namespace name that is unique across all users.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="display_name"
                         style="plain"
                         type="xsd:string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            User-friendly name that can be used in UI to
                            display the namespace name.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="description"
                         style="plain"
                         type="xsd:string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Detailed description for the namespace.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="visibility"
                         style="plain"
                         type="xsd:string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Namespace visibility. Valid value is public or
                            private. Default is private.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="protected"
                         style="plain"
                         type="xsd:boolean"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                         <para>
                            Namespace protection for deletion. Valid value is
                            true or false. Default is false.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="properties"
                         style="plain"
                         type="xsd:dict"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                         <para>
                            One or more property definitions in the namespace.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="objects" style="plain" type="xsd:dict" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                         <para>
                            One or more object definitions in the namespace.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="resource_type_associations"
                         style="plain"
                         type="xsd:dict"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                         <para>
                            One or more resource types that are associated
                            with this namespace.
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "description": "Choose capabilities that should be provided by the Compute Host. This provides the ability to fine tune the hardware specification required when a new vm is requested.",
    "display_name": "Hypervisor Selection",
    "namespace": "OS::Compute::Hypervisor",
    "properties": {
        "hypervisor_type": {
            "description": "The hypervisor type.",
            "enum": [
                "xen",
                "qemu",
                "kvm",
                "lxc",
                "uml",
                "vmware",
                "hyperv"
            ],
            "title": "Hypervisor Type",
            "type": "string"
        },
        "vm_mode": {
            "description": "The virtual machine mode.",
            "enum": [
                "hvm",
                "xen",
                "uml",
                "exe"
            ],
            "title": "VM Mode",
            "type": "string"
        }
    },
    "protected": true,
    "resource_type_associations": [
        {
            "name": "OS::Glance::Image"
        }
    ],
    "schema": "/v2/schemas/metadefs/namespace",
    "self": "/v2/metadefs/namespaces/OS::Compute::Hypervisor",
    "visibility": "public"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                
                  <param name="namespace"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The <code>namespace</code> is unique across all users.</para>
                     </wadl:doc>
                  </param> 
                  <param name="display_name"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User friendly name which could be used in UI for displaying namespace name.</para>
                     </wadl:doc>
                  </param>
                
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Detailed description for the namespace.</para>
                     </wadl:doc>
                  </param> 
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Namespace visibility. A valid value is <code>public</code> or
      <code>private</code>. Default is <code>private</code>.
   </para>
                     </wadl:doc>
                  </param>
                
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Namespace protection for deletion. A valid value is <code>True</code> or
      <code>False</code>. Default is <code>False</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="properties"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Property definition(s) of the namespace.</para>
                     </wadl:doc>
                  </param>
                
                  <param name="objects" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Object definition(s) of the namespace.</para>
                     </wadl:doc>
                  </param> 
                  <param name="resource_type_associations"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Resource type(s) which are associated with this namespace.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listNamespaces-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List namespaces">
               <para role="shortdesc">Lists public namespaces.</para>
               <para>
                Returns a subset in the larger collection of namespaces and a
                link that you can use to get the next set of namespaces. Check
                for the presence of a <code>next</code> link and use it as the
                URI in a subsequent HTTP GET request. Follow this pattern
                until a <code>next</code> link is no longer provided. The
                <code>next</code> link preserves any query parameters that you
                send in your initial request. You can use the
                <code>first</code> link to return to the first page in the
                collection. If you prefer to paginate through namespaces
                manually, use the <code>limit</code> and <code>marker</code>
                parameters.
            </para>
               <para>
                The list operation accepts the <code>resource_types</code> and
                <code>visibility</code> query parameters, which let you filter
                the results in the returned collection.
            </para>
               <para>
                To sort the results of this operation, use the
                <code>sort_key</code> and <code>sort_dir</code> parameters.
                The API uses the natural sorting order in the namespace
                attribute that you provide as the <code>sort_key</code>
                parameter.
            </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                
                  <param name="limit" style="query" required="false" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Requests a specified page size of returned items from the query.
            Returns a number of items up to the specified limit value. Use the
            <code>limit</code> parameter to make an initial limited request
            and use the ID of the last-seen item from the response as the
            <code>marker</code> parameter value in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Specifies the ID of the last-seen item. Use the <code>limit</code>
            parameter to make an initial limited request and use the ID of the
            last-seen item from the response as the <code>marker</code>
            parameter value in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="visibility"
                         style="query"
                         required="false"
                         type="imageapi:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                       <para>Filter parameter. Namespace visibility. Valid values are
                          <code>public</code> and <code>private</code>.
                          Default is <code>public</code>.
                       </para>
                    </wadl:doc>
                  </param>
                  <param name="resource_types"
                         style="query"
                         required="false"
                         type="xsd:int">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                       <para>
                            Filter parameter. Specify this value as comma-
                            separated list. For example, send the
                            <code>resource_types</code> filter of
                            <code>OS::Glance::Image,OS::Nova::Flavor</code> to
                            filter the namespaces by the specified resource
                            types.
                       </para>
                    </wadl:doc>
                  </param>
                  <param name="sort_key"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                       <para>Sort key. Use attributes like <code>namespace</code>
                          for sorting. Default is <code>created_at</code>.
                       </para>
                    </wadl:doc>
                  </param>
                  <param name="sort_dir"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                       <para>Sort direction. Valid values are <code>asc</code>
                          (ascending) and <code>desc</code> (descending). Default is
                          <code>desc</code>.
                       </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "first": "/v2/metadefs/namespaces?sort_key=created_at&amp;sort_dir=asc",
    "namespaces": [
        {
            "created_at": "2014-08-28T17:13:06Z",
            "description": "The libvirt compute driver options. These are properties specific to compute drivers.  For a list of all hypervisors, see here: https://wiki.openstack.org/wiki/HypervisorSupportMatrix.",
            "display_name": "libvirt Driver Options",
            "namespace": "OS::Compute::Libvirt",
            "owner": "admin",
            "protected": true,
            "resource_type_associations": [
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Glance::Image",
                    "updated_at": "2014-08-28T17:13:06Z"
                }
            ],
            "schema": "/v2/schemas/metadefs/namespace",
            "self": "/v2/metadefs/namespaces/OS::Compute::Libvirt",
            "updated_at": "2014-08-28T17:13:06Z",
            "visibility": "public"
        },
        {
            "created_at": "2014-08-28T17:13:06Z",
            "description": "Compute drivers may enable quotas on CPUs available to a VM, disk tuning, bandwidth I/O, and instance VIF traffic control.  See: http://docs.openstack.org/admin-guide-cloud/compute-flavors.html",
            "display_name": "Flavor Quota",
            "namespace": "OS::Compute::Quota",
            "owner": "admin",
            "protected": true,
            "resource_type_associations": [
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Nova::Flavor",
                    "updated_at": "2014-08-28T17:13:06Z"
                }
            ],
            "schema": "/v2/schemas/metadefs/namespace",
            "self": "/v2/metadefs/namespaces/OS::Compute::Quota",
            "updated_at": "2014-08-28T17:13:06Z",
            "visibility": "public"
        },
        {
            "created_at": "2014-08-28T17:13:06Z",
            "description": "Trusted compute pools with Intel\u00ae Trusted Execution Technology (Intel\u00ae TXT) support IT compliance by protecting virtualized data centers - private, public, and hybrid clouds against attacks toward hypervisor and BIOS, firmware, and other pre-launch software components.",
            "display_name": "Trusted Compute Pools (Intel\u00ae TXT)",
            "namespace": "OS::Compute::Trust",
            "owner": "admin",
            "protected": true,
            "resource_type_associations": [
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Nova::Flavor",
                    "updated_at": "2014-08-28T17:13:06Z"
                }
            ],
            "schema": "/v2/schemas/metadefs/namespace",
            "self": "/v2/metadefs/namespaces/OS::Compute::Trust",
            "updated_at": "2014-08-28T17:13:06Z",
            "visibility": "public"
        },
        {
            "created_at": "2014-08-28T17:13:06Z",
            "description": "This provides the preferred socket/core/thread counts for the virtual CPU instance exposed to guests. This enables the ability to avoid hitting limitations on vCPU topologies that OS vendors place on their products. See also: http://git.openstack.org/cgit/openstack/nova-specs/tree/specs/juno/virt-driver-vcpu-topology.rst",
            "display_name": "Virtual CPU Topology",
            "namespace": "OS::Compute::VirtCPUTopology",
            "owner": "admin",
            "protected": true,
            "resource_type_associations": [
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Glance::Image",
                    "prefix": "hw_",
                    "updated_at": "2014-08-28T17:13:06Z"
                },
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Cinder::Volume",
                    "prefix": "hw_",
                    "properties_target": "image",
                    "updated_at": "2014-08-28T17:13:06Z"
                },
                {
                    "created_at": "2014-08-28T17:13:06Z",
                    "name": "OS::Nova::Flavor",
                    "prefix": "hw:",
                    "updated_at": "2014-08-28T17:13:06Z"
                }
            ],
            "schema": "/v2/schemas/metadefs/namespace",
            "self": "/v2/metadefs/namespaces/OS::Compute::VirtCPUTopology",
            "updated_at": "2014-08-28T17:13:06Z",
            "visibility": "public"
        }
    ],
    "schema": "/v2/schemas/metadefs/namespaces"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                
                  <param name="namespaces"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A <code>namespaces</code> object.</para>
                     </wadl:doc>
                  </param> 
                  <param name="namespace"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The <code>namespace</code> is unique across all users.</para>
                     </wadl:doc>
                  </param>
                
                  <param name="display_name"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>User friendly name which could be used in UI for displaying namespace name.</para>
                     </wadl:doc>
                  </param> 
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Detailed description for the namespace.</para>
                     </wadl:doc>
                  </param>
                
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Namespace visibility. A valid value is <code>public</code> or
      <code>private</code>. Default is <code>private</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Namespace protection for deletion. A valid value is <code>True</code> or
      <code>False</code>. Default is <code>False</code>.
   </para>
                     </wadl:doc>
                  </param>
                
                  <param name="resource_type_associations"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Resource type(s) which are associated with this namespace.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
      <resource path="/v2/metadefs/namespaces/{namespace}" id="namespace">
         <param name="namespace"
                style="template"
                type="xsd:string"
                required="true">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                           <para>
                                Unique namespace.
                            </para>
                        </wadl:doc>
                        </param>
         <method name="GET" rax:id="getNamespace-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get namespaces details">
               <para role="shortdesc">
                Gets details for a specified namespace.
            </para>
               <para>
                The response body shows a single namespace entity with all
                details including properties and objects.
            </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "created_at": "2014-08-28T17:13:06Z",
    "description": "The libvirt compute driver options. These are properties specific to compute drivers.  For a list of all hypervisors, see here: https://wiki.openstack.org/wiki/HypervisorSupportMatrix.",
    "display_name": "libvirt Driver Options",
    "namespace": "OS::Compute::Libvirt",
    "owner": "admin",
    "properties": {
        "hw_disk_bus": {
            "description": "Specifies the type of disk controller to attach disk devices to.",
            "enum": [
                "scsi",
                "virtio",
                "uml",
                "xen",
                "ide",
                "usb"
            ],
            "title": "Disk Bus",
            "type": "string"
        },
        "hw_machine_type": {
            "description": "Enables booting an ARM system using the specified machine type. By default, if an ARM image is used and its type is not specified, Compute uses vexpress-a15 (for ARMv7) or virt (for AArch64) machine types. Valid types can be viewed by using the virsh capabilities command (machine types are displayed in the machine tag).",
            "title": "Machine Type",
            "type": "string"
        },
        "hw_qemu_guest_agent": {
            "description": "It is a daemon program running inside the domain which is supposed to help management applications with executing functions which need assistance of the guest OS. For example, freezing and thawing filesystems, entering suspend. However, guest agent (GA) is not bullet proof, and hostile guest OS can send spurious replies.",
            "enum": [
                "yes",
                "no"
            ],
            "title": "QEMU Guest Agent",
            "type": "string"
        },
        "hw_rng_model": {
            "default": "virtio",
            "description": "Adds a random-number generator device to the image's instances. The cloud administrator can enable and control device behavior by configuring the instance's flavor. By default: The generator device is disabled. /dev/random is used as the default entropy source. To specify a physical HW RNG device, use the following option in the nova.conf file: rng_dev_path=/dev/hwrng",
            "title": "Random Number Generator Device",
            "type": "string"
        },
        "hw_scsi_model": {
            "default": "virtio-scsi",
            "description": "Enables the use of VirtIO SCSI (virtio-scsi) to provide block device access for compute instances; by default, instances use VirtIO Block (virtio-blk). VirtIO SCSI is a para-virtualized SCSI controller device that provides improved scalability and performance, and supports advanced SCSI hardware.",
            "title": "SCSI Model",
            "type": "string"
        },
        "hw_video_model": {
            "description": "The video image driver used.",
            "enum": [
                "vga",
                "cirrus",
                "vmvga",
                "xen",
                "qxl"
            ],
            "title": "Video Model",
            "type": "string"
        },
        "hw_video_ram": {
            "description": "Maximum RAM for the video image. Used only if a hw_video:ram_max_mb value has been set in the flavor's extra_specs and that value is higher than the value set in hw_video_ram.",
            "title": "Max Video Ram",
            "type": "integer"
        },
        "hw_vif_model": {
            "description": "Specifies the model of virtual network interface device to use. The valid options depend on the configured hypervisor. KVM and QEMU: e1000, ne2k_pci, pcnet, rtl8139, and virtio. VMware: e1000, e1000e, VirtualE1000, VirtualE1000e, VirtualPCNet32, VirtualSriovEthernetCard, and VirtualVmxnet. Xen: e1000, netfront, ne2k_pci, pcnet, and rtl8139.",
            "enum": [
                "e1000",
                "ne2k_pci",
                "pcnet",
                "rtl8139",
                "virtio",
                "e1000",
                "e1000e",
                "VirtualE1000",
                "VirtualE1000e",
                "VirtualPCNet32",
                "VirtualSriovEthernetCard",
                "VirtualVmxnet",
                "netfront",
                "ne2k_pci"
            ],
            "title": "Virtual Network Interface",
            "type": "string"
        },
        "os_command_line": {
            "description": "The kernel command line to be used by the libvirt driver, instead of the default. For linux containers (LXC), the value is used as arguments for initialization. This key is valid only for Amazon kernel, ramdisk, or machine images (aki, ari, or ami).",
            "title": "Kernel Command Line",
            "type": "string"
        }
    },
    "protected": true,
    "resource_type_associations": [
        {
            "created_at": "2014-08-28T17:13:06Z",
            "name": "OS::Glance::Image",
            "updated_at": "2014-08-28T17:13:06Z"
        }
    ],
    "schema": "/v2/schemas/metadefs/namespace",
    "self": "/v2/metadefs/namespaces/OS::Compute::Libvirt",
    "updated_at": "2014-08-28T17:13:06Z",
    "visibility": "public"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="PUT" rax:id="updateNamespace-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update namespace">
               <para role="shortdesc">Updates a specified namespace.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "description": "Choose capabilities that should be provided by the Compute Host. This provides the ability to fine tune the hardware specification required when a new vm is requested.",
    "display_name": "Hypervisor Selection",
    "namespace": "OS::Compute::Hypervisor",
    "protected": false,
    "visibility": "public"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                
                  <param name="namespace"
                         style="template"
                         type="csapi:uuid"
                         required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Namespace">
                        <para>Unique namespace.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "created_at": "2014-09-19T13:31:37Z",
    "description": "Choose capabilities that should be provided by the Compute Host. This provides the ability to fine tune the harware specification required when a new vm is requested.",
    "display_name": "Hypervisor Selection",
    "namespace": "OS::Compute::Hypervisor",
    "owner": "7ec22942411e427692e8a3436be1031a",
    "protected": false,
    "schema": "/v2/schemas/metadefs/namespace",
    "self": "/v2/metadefs/namespaces/OS::Compute::Hypervisor",
    "updated_at": "2014-09-19T13:31:37Z",
    "visibility": "public"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteNamespace-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete namespace">
               <para role="shortdesc">
                Deletes a specified namespace and its properties,
                objects, and any resource type associations.
            </para>
               <para>
                You cannot delete namespaces with the <code>protected</code>
                attribute set to true (boolean); the response returns the HTTP
                403 status code.
            </para>
               <para>
                To delete a namespace, you must first make an update namespace
                request to set the <code>protected</code> attribute to false
                (boolean) on the namespace. Then, delete the namespace.
            </para>
               <para>
                If the operation succeeds, the response returns the HTTP 204
                status code.
            </para>
               <para>
                If you try to remove a namespace with the
                <code>protected</code> attribute set to true (boolean), the
                operation fails and the response returns the HTTP 403 error
                code.
            </para>
            </wadl:doc>
            <response status="204"/>
            <response status="403"/>
         </method>
      </resource>
                    
                        
                        
                        
                    
    </resources>
    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->
    <!-- Namespace methods -->
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createNamespace-v2">
        
        <request>
            <representation mediaType="application/json" element="image">
                
                <param name="namespace"
                   style="plain"
                   type="xsd:string"
                   required="true">
                    
                </param>
                <param name="display_name"
                   style="plain"
                   type="xsd:string"
                   required="false">
                    
                </param>
                <param name="description"
                   style="plain"
                   type="xsd:string"
                   required="false">
                    
                </param>
                <param name="visibility"
                   style="plain"
                   type="xsd:string"
                   required="false">
                    
                </param>
                <param name="protected"
                   style="plain"
                   type="xsd:boolean"
                   required="false">
                    
                </param>
                <param name="properties"
                   style="plain"
                   type="xsd:dict"
                   required="false">
                    
                </param>
                <param name="objects" style="plain" type="xsd:dict" required="false">
                    
                </param>
                <param name="resource_type_associations"
                   style="plain"
                   type="xsd:dict"
                   required="false">
                    
                </param>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                
                
            <param name="namespace"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="display_name"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="properties"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="objects" style="plain" required="true" type="xsd:string">

</param> 
            <param name="resource_type_associations"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listNamespaces-v2">
        
        <request>
            <representation mediaType="application/json">
                
            <param name="limit" style="query" required="false" type="xsd:int">
    
</param>
            <param name="marker" style="query" required="false" type="xsd:string">
    
</param>
                <param name="visibility"
                   style="query"
                   required="false"
                   type="imageapi:string">
                    
                </param>
                <param name="resource_types"
                   style="query"
                   required="false"
                   type="xsd:int">
                    
                </param>
                <param name="sort_key"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                    
                </param>
                <param name="sort_dir"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                    
                </param>
             </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
                
            <param name="namespaces"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="namespace"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="display_name"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param> 
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
                
            <param name="resource_type_associations"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
             </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getNamespace-v2">
        
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateNamespace-v2">
        
        <request>
            <representation mediaType="application/json">
                
                
            <param name="namespace"
                   style="template"
                   type="csapi:uuid"
                   required="true">

</param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                
            </representation>
        </response>
    </method>
    <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteNamespace-v2">
        
        <response status="204"/>
        <response status="403"/>
    </method>
</wadl:application>
