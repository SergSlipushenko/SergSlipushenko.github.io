{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"/v2.1/{tenant_id}/servers/{server_id}/action", "parameters":{ "tenant_id":{ "description":"\n The tenant ID in a multi-tenancy cloud.\n", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] }, "server_id":{ "description":"\n The UUID for the server.\n", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Shelve server", "description":"\n Shelves a running server.\n \n Specify the shelve action in the request\n body.\n \n \n All associated data and resources are kept but anything still in\n memory is not retained. To restore a shelved instance, use the\n unshelve action. To remove a shelved instance, use\n the shelveOffload action.\n \n \n Policy defaults enable only users with the administrative role\n or the owner of the server to perform this operation. Cloud\n providers can change these permissions through the\n policy.json file.\n \n Preconditions\n \n \n \n The server status must be ACTIVE,\n SHUTOFF, PAUSED, or\n SUSPENDED.\n \n \n \n \n If the specified server is locked, you must have\n administrator privileges to shelve the server.\n \n \n \n Asynchronous Postconditions\n \n \n \n After you successfully shelve a server, its status changes\n to SHELVED and the image status is\n ACTIVE. The server instance data appears on\n the compute node that the Compute service manages.\n \n \n \n \n If you boot the server from volumes or set the\n shelved_offload_time option to 0, the Compute\n service automatically deletes the instance on compute\n nodes and changes the server status to\n SHELVED_OFFLOADED.\n \n \n \n Troubleshooting\n \n \n \n If the server status does not change to\n SHELVED or SHELVED_OFFLOADED,\n the shelve operation failed. Ensure that you meet the\n preconditions and run the request again. If the request\n fails again, investigate whether another operation is\n running that causes a race condition.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"shelve\": null\n}\n", "schema":"" } ], "responses":[  ] } ] }, { "method":"POST", "name":"Restore shelved server", "description":"\n Restores a shelved server.\n \n Specify the unshelve action in the request\n body.\n \n \n Policy defaults enable only users with the administrative\n role or the owner of the server to perform this\n operation. Cloud providers can change these permissions through the\n policy.json file.\n \n Preconditions\n \n The server status must be\n SHELVED or SHELVED_OFFLOADED.\n \n If the specified server is locked,\n you must have administrator privileges to unshelve\n the server.\n \n Asynchronous Postconditions\n \n After you successfully shelve a server, its\n status changes to ACTIVE. The server appears on\n the compute node.\n The shelved image is deleted from the\n list of images returned by an API call.\n \n Troubleshooting\n \n If the server status does not change to\n ACTIVE, the unshelve operation failed. Ensure\n that you meet the preconditions and run the request again.\n If the request fails again, investigate whether another\n operation is running that causes a race condition.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"unshelve\": null\n}\n", "schema":"" } ], "responses":[  ] } ] }, { "method":"POST", "name":"Remove shelved instance", "description":"\n Removes an instance from the\n server.\n \n Specify the shelveOffload action in the request\n body.\n \n Data and resource associations are deleted. If an\n instance is no longer needed, you can remove that\n instance from the hypervisor to minimize resource\n usage.\n \n Policy defaults enable only users with the administrative\n role or the owner of the server to perform this\n operation. Cloud providers can change these permissions through the\n policy.json file.\n \n Preconditions\n \n The server status must be\n SHELVED.\n \n If the specified server is locked, you must have\n administrator privileges to shelve-offload the server.\n \n \n Asynchronous Postconditions\n \n After you successfully shelve-offload a\n server, its status changes to SHELVED_OFFLOAD.\n The server instance data appears on the compute\n node.\n \n Troubleshooting\n \n If the server status does not change\n to SHELVEDED_OFFLOADED, the shelve-offload\n operation failed. Ensure that you meet the preconditions\n and run the request again. If the request fails again,\n investigate whether another operation is running that\n causes a race condition.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"shelveOffload\": null\n}\n", "schema":"" } ], "responses":[  ] } ] } ] } ] } ] }