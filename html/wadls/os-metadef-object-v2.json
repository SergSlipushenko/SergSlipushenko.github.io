{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"/v2/metadefs/namespaces/{namespace}/objects{?visibility,resource_types,sort_key,sort_dir}", "parameters":{  }, "headers":{  }, "actions":[ { "method":"POST", "name":"Create object", "description":"\n \n Creates an object definition in a specified\n namespace.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_period\": {\n \"description\": \"Specifies the enforcement interval (unit: microseconds) for QEMU and LXC hypervisors. Within a period, each VCPU of the domain is not allowed to consume more than the quota worth of runtime. The value should be in range [1000, 1000000]. A period with value 0 means no value.\",\n \"maximum\": 1000000,\n \"minimum\": 1000,\n \"title\": \"Quota: CPU Period\",\n \"type\": \"integer\"\n },\n \"quota:cpu_quota\": {\n \"description\": \"Specifies the maximum allowed bandwidth (unit: microseconds). A domain with a negative-value quota indicates that the domain has infinite bandwidth, which means that it is not bandwidth controlled. The value should be in range [1000, 18446744073709551] or less than 0. A quota with value 0 means no value. You can use this feature to ensure that all vCPUs run at the same speed.\",\n \"title\": \"Quota: CPU Quota\",\n \"type\": \"integer\"\n },\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": []\n}\n", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-09-19T18:20:56Z\",\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_period\": {\n \"description\": \"Specifies the enforcement interval (unit: microseconds) for QEMU and LXC hypervisors. Within a period, each VCPU of the domain is not allowed to consume more than the quota worth of runtime. The value should be in range [1000, 1000000]. A period with value 0 means no value.\",\n \"maximum\": 1000000,\n \"minimum\": 1000,\n \"title\": \"Quota: CPU Period\",\n \"type\": \"integer\"\n },\n \"quota:cpu_quota\": {\n \"description\": \"Specifies the maximum allowed bandwidth (unit: microseconds). A domain with a negative-value quota indicates that the domain has infinite bandwidth, which means that it is not bandwidth controlled. The value should be in range [1000, 18446744073709551] or less than 0. A quota with value 0 means no value. You can use this feature to ensure that all vCPUs run at the same speed.\",\n \"title\": \"Quota: CPU Quota\",\n \"type\": \"integer\"\n },\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/CPU Limits\",\n \"updated_at\": \"2014-09-19T18:20:56Z\"\n}\n", "schema":"" } ] } ] }, { "method":"GET", "name":"List objects", "description":"\n Lists object definitions within\n a namespace.\n \n Returns a subset of the larger collection of namespaces and a\n link that you can use to get the next set of namespaces. You\n should always check for the presence of a next\n link and use it as the URI in a subsequent HTTP GET request.\n You should follow this pattern until a next link\n is no longer provided. The next link preserves any query\n parameters that you send in your initial request. You can use\n the first link to jump back to the first page of\n the collection. If you prefer to paginate through namespaces\n manually, use the limit and marker\n parameters.\n \n \n The list operation accepts resource_types and\n visibility as query parameters that let you\n filter the results of the returned collection.\n \n \n For example, sending a resource_types filter of\n OS::Glance::Image,OS::Nova::Flavor filters the\n namespaces to include only namespaces that are associated to\n the given resource types.\n \n \n You can sort the results of this operation by using the\n sort_key and sort_dir parameters.\n The API uses the natural sorting of whatever namespace\n attribute is provided as the sort_key.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"objects\": [\n {\n \"created_at\": \"2014-09-18T18:16:35Z\",\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_period\": {\n \"description\": \"Specifies the enforcement interval (unit: microseconds) for QEMU and LXC hypervisors. Within a period, each VCPU of the domain is not allowed to consume more than the quota worth of runtime. The value should be in range [1000, 1000000]. A period with value 0 means no value.\",\n \"maximum\": 1000000,\n \"minimum\": 1000,\n \"title\": \"Quota: CPU Period\",\n \"type\": \"integer\"\n },\n \"quota:cpu_quota\": {\n \"description\": \"Specifies the maximum allowed bandwidth (unit: microseconds). A domain with a negative-value quota indicates that the domain has infinite bandwidth, which means that it is not bandwidth controlled. The value should be in range [1000, 18446744073709551] or less than 0. A quota with value 0 means no value. You can use this feature to ensure that all vCPUs run at the same speed.\",\n \"title\": \"Quota: CPU Quota\",\n \"type\": \"integer\"\n },\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/CPU Limits\"\n },\n {\n \"created_at\": \"2014-09-18T18:16:35Z\",\n \"description\": \"Using disk I\/O quotas, you can set maximum disk write to 10 MB per second for a VM user.\",\n \"name\": \"Disk QoS\",\n \"properties\": {\n \"quota:disk_read_bytes_sec\": {\n \"description\": \"Sets disk I\/O quota for disk read bytes \/ sec.\",\n \"title\": \"Quota: Disk read bytes \/ sec\",\n \"type\": \"integer\"\n },\n \"quota:disk_read_iops_sec\": {\n \"description\": \"Sets disk I\/O quota for disk read IOPS \/ sec.\",\n \"title\": \"Quota: Disk read IOPS \/ sec\",\n \"type\": \"integer\"\n },\n \"quota:disk_total_bytes_sec\": {\n \"description\": \"Sets disk I\/O quota for total disk bytes \/ sec.\",\n \"title\": \"Quota: Disk Total Bytes \/ sec\",\n \"type\": \"integer\"\n },\n \"quota:disk_total_iops_sec\": {\n \"description\": \"Sets disk I\/O quota for disk total IOPS \/ sec.\",\n \"title\": \"Quota: Disk Total IOPS \/ sec\",\n \"type\": \"integer\"\n },\n \"quota:disk_write_bytes_sec\": {\n \"description\": \"Sets disk I\/O quota for disk write bytes \/ sec.\",\n \"title\": \"Quota: Disk Write Bytes \/ sec\",\n \"type\": \"integer\"\n },\n \"quota:disk_write_iops_sec\": {\n \"description\": \"Sets disk I\/O quota for disk write IOPS \/ sec.\",\n \"title\": \"Quota: Disk Write IOPS \/ sec\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/Disk QoS\"\n },\n {\n \"created_at\": \"2014-09-18T18:16:35Z\",\n \"description\": \"Bandwidth QoS tuning for instance virtual interfaces (VIFs) may be specified with these properties. Incoming and outgoing traffic can be shaped independently. If not specified, no quality of service (QoS) is applied on that traffic direction. So, if you want to shape only the network's incoming traffic, use inbound only (and vice versa). The OpenStack Networking service abstracts the physical implementation of the network, allowing plugins to configure and manage physical resources. Virtual Interfaces (VIF) in the logical model are analogous to physical network interface cards (NICs). VIFs are typically owned a managed by an external service; for instance when OpenStack Networking is used for building OpenStack networks, VIFs would be created, owned, and managed in Nova. VIFs are connected to OpenStack Networking networks via ports. A port is analogous to a port on a network switch, and it has an administrative state. When a VIF is attached to a port the OpenStack Networking API creates an attachment object, which specifies the fact that a VIF with a given identifier is plugged into the port.\",\n \"name\": \"Virtual Interface QoS\",\n \"properties\": {\n \"quota:vif_inbound_average\": {\n \"description\": \"Network Virtual Interface (VIF) inbound average in kilobytes per second. Specifies average bit rate on the interface being shaped.\",\n \"title\": \"Quota: VIF Inbound Average\",\n \"type\": \"integer\"\n },\n \"quota:vif_inbound_burst\": {\n \"description\": \"Network Virtual Interface (VIF) inbound burst in total kilobytes. Specifies the amount of bytes that can be burst at peak speed.\",\n \"title\": \"Quota: VIF Inbound Burst\",\n \"type\": \"integer\"\n },\n \"quota:vif_inbound_peak\": {\n \"description\": \"Network Virtual Interface (VIF) inbound peak in kilobytes per second. Specifies maximum rate at which an interface can receive data.\",\n \"title\": \"Quota: VIF Inbound Peak\",\n \"type\": \"integer\"\n },\n \"quota:vif_outbound_average\": {\n \"description\": \"Network Virtual Interface (VIF) outbound average in kilobytes per second. Specifies average bit rate on the interface being shaped.\",\n \"title\": \"Quota: VIF Outbound Average\",\n \"type\": \"integer\"\n },\n \"quota:vif_outbound_burst\": {\n \"description\": \"Network Virtual Interface (VIF) outbound burst in total kilobytes. Specifies the amount of bytes that can be burst at peak speed.\",\n \"title\": \"Quota: VIF Outbound Burst\",\n \"type\": \"integer\"\n },\n \"quota:vif_outbound_peak\": {\n \"description\": \"Network Virtual Interface (VIF) outbound peak in kilobytes per second. Specifies maximum rate at which an interface can send data.\",\n \"title\": \"Quota: VIF Outbound Burst\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/Virtual Interface QoS\"\n }\n ],\n \"schema\": \"v2\/schemas\/metadefs\/objects\"\n}\n", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2/metadefs/namespaces/{namespace}/objects/{object_name}", "parameters":{ "namespace":{ "description":"\n Unique namespace.\n", "type":"csapi:uuid", "required":"true", "default":"", "example":"", "values":[  ] }, "object_name":{ "description":"\n The name of the object.\n", "type":"xsd:string", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get object definition", "description":"\n Gets definition for a specified object.\n \n Response body is a single object entity.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-09-19T18:20:56Z\",\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_period\": {\n \"description\": \"Specifies the enforcement interval (unit: microseconds) for QEMU and LXC hypervisors. Within a period, each VCPU of the domain is not allowed to consume more than the quota worth of runtime. The value should be in range [1000, 1000000]. A period with value 0 means no value.\",\n \"maximum\": 1000000,\n \"minimum\": 1000,\n \"title\": \"Quota: CPU Period\",\n \"type\": \"integer\"\n },\n \"quota:cpu_quota\": {\n \"description\": \"Specifies the maximum allowed bandwidth (unit: microseconds). A domain with a negative-value quota indicates that the domain has infinite bandwidth, which means that it is not bandwidth controlled. The value should be in range [1000, 18446744073709551] or less than 0. A quota with value 0 means no value. You can use this feature to ensure that all vCPUs run at the same speed.\",\n \"title\": \"Quota: CPU Quota\",\n \"type\": \"integer\"\n },\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/CPU Limits\",\n \"updated_at\": \"2014-09-19T18:20:56Z\"\n}\n", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update object definition", "description":"\n \n Updates a specified object definition in a specified\n namespace.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": []\n}\n", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-09-19T19:20:56Z\",\n \"description\": \"You can configure the CPU limits with control parameters.\",\n \"name\": \"CPU Limits\",\n \"properties\": {\n \"quota:cpu_shares\": {\n \"description\": \"Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024.\",\n \"title\": \"Quota: CPU Shares\",\n \"type\": \"integer\"\n }\n },\n \"required\": [],\n \"schema\": \"\/v2\/schemas\/metadefs\/object\",\n \"self\": \"\/v2\/metadefs\/namespaces\/OS::Compute::Quota\/objects\/CPU Limits\",\n \"updated_at\": \"2014-09-19T19:20:56Z\"\n}\n", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete property definition", "description":"\n \n Deletes a specified object definition within a namespace.\n \n \n You cannot delete objects in a namespace with the 'protected'\n attribute set to true (boolean); the response returns\n the HTTP 403 status code.\n \n \n You must first set the protected attribute to\n false (boolean) on the namespace and then perform the delete.\n The response is empty and returns the HTTP 204 status code.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ], "responses":[  ] } ] } ] } ] } ] }