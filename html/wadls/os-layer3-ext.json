{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"Router list", "description":"\n A list of routers.\n", "uriTemplate":"/v2.0/routers", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List routers", "description":"\n Lists logical routers that are\n accessible to the tenant who submits the\n request.\n \n Default policy settings return only those routers\n that are owned by the tenant who submits the request,\n unless an admin user submits the request.\n \n This example request lists routers in JSON\n format:\n GET \/v2.0\/routers\nAccept: application\/json\n Use the fields query parameter to\n control which fields are returned in the response\n body. Additionally, you can filter results by using\n query string parameters. For information, see Filtering and Column Selection.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"routers\": [\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": null,\n \"name\": \"second_routers\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"routes\": [],\n \"id\": \"7177abc4-5ae9-4bb7-b0d4-89e94a4abf3b\"\n },\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": {\n \"network_id\": \"3c5bcddd-6af9-4e6b-9c3e-c153e521cab8\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.2\"\n }\n ]\n },\n \"name\": \"router1\",\n \"admin_state_up\": true,\n \"tenant_id\": \"33a40233088643acb66ff6eb0ebea679\",\n \"routes\": [],\n \"id\": \"a9254bdb-2613-4a13-ac4c-adc581fba50d\"\n }\n ]\n}\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create router", "description":"\n Creates a logical router.\n This operation creates a new logical router. When it\n is created, a logical router does not have any\n internal interface; it is not associated to any\n subnet. You can optionally specify an external gateway\n for a router at create time. The external gateway for\n the router must be plugged into an external network.\n An external network has its extended field\n router:external set to true. To\n specify an external gateway, the identifier of the\n external network must be passed in the\n external_gateway_info attribute in\n the request body, as follows:\n {\n \"router\": {\n \"external_gateway_info\": {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\"\n }\n }\n}\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\": {\n \"name\": \"another_router\",\n \"external_gateway_info\": {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.1\"\n }\n ]\n },\n \"admin_state_up\": true\n }\n}\n", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\": {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.2\"\n }\n ]\n },\n \"name\": \"another_router\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"routes\": [],\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\"\n }\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2.0/routers/{router_id}", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show router details", "description":"\n Shows details for a specified\n router.\n This example request shows details for a router in\n JSON format:\n GET \/v2.0\/routers\/{router_id}\nAccept: application\/json\n Use the fields query parameter to\n control which fields are returned in the response\n body. For information, see Filtering and Column Selection.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\": {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": {\n \"network_id\": \"85d76829-6415-48ff-9c63-5c5ca8c61ac6\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.2\"\n }\n ]\n },\n \"name\": \"router1\",\n \"admin_state_up\": true,\n \"tenant_id\": \"d6554fe62e2f41efbb6e026fad5c1542\",\n \"routes\": [],\n \"id\": \"a07eea83-7710-4860-931b-5fe220fae533\"\n }\n}\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update router", "description":"\n Updates a logical router.\n You can update the name, administrative state, and\n the external gateway. For more information about how\n to set the external gateway for a router, see the\n create router operation. This operation does not\n enable the update of router interfaces. To update a\n router, use the add router interface and remove router\n interface operations.\n This example updates the external gateway\n information for a router:\n PUT \/v2.0\/routers\/{router_id}\nAccept: application\/json\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\": {\n \"external_gateway_info\": {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.1\"\n }\n ]\n }\n }\n}\n", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\": {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\",\n \"external_fixed_ips\": [\n {\n \"subnet_id\": \"255.255.255.0\",\n \"ip\": \"192.168.10.2\"\n }\n ]\n },\n \"name\": \"another_router\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"routes\": [],\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\"\n }\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete router", "description":"\n Deletes a logical router and, if\n present, its external gateway interface.\n This operation fails if the router has attached\n interfaces.\n Use the remove router interface operation to remove\n all router interfaces before you delete the\n router.\n This example deletes a router:\n DELETE \/v2.0\/routers\/{router_id}\nAccept: application\/json", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2.0/routers/{router_id}/add_router_interface", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"PUT", "name":"Add interface to router", "description":"\n \n Adds an internal interface to a logical router.\n \n \n Attaches a subnet to an internal router interface.\n \n \n Specify a subnet ID or port ID in the request body:\n \n \n \n \n Subnet ID. The gateway IP address for the subnet is\n used to create the router interface.\n \n \n \n \n Port ID. The IP address associated with the port is\n used to create the router interface.\n \n \n \n \n If you specify both IDs, the operation returns a 400 Bad\n Request error.\n \n \n If the port is already used, the operation returns a 409\n Conflict error.\n \n \n The port ID that is returned by this operation can be either:\n \n \n \n \n The same ID that is passed in the request body.\n \n \n \n \n The ID of a port that is created by this operation to\n attach the specified subnet to the router.\n \n \n \n \n After you run this operation:\n \n \n \n \n The device ID of this port is set to the router ID.\n \n \n \n \n The device_owner attribute is set to\n network:router_interface.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}\n", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\",\n \"tenant_id\": \"6ba032e4730d42e2ad928f430f5da33e\",\n \"port_id\": \"3a44f4e5-1694-493a-a1fb-393881c673a4\",\n \"id\": \"b0294d7e-7da4-4202-9882-2ab1de9dabc0\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2.0/routers/{router_id}/remove_router_interface", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"PUT", "name":"Remove interface from router", "description":"\n Removes an internal interface from\n a logical router.\n This operation removes an internal router interface,\n which detaches a subnet from the router. You must\n specify either a subnet ID or port ID in the request\n body; this value is used to identify the router\n interface to remove.\n You can also specify both a subnet ID and port ID.\n If you specify both IDs, the subnet ID must correspond\n to the subnet ID of the first IP address on the port\n specified by the port ID. Otherwise, the operation\n returns a 409 Conflict error. The\n response contains information about the affected\n router and interface.\n The operation returns a 404 Not Found\n if the router or the subnet and port do not exist or\n are not visible to you. As a consequence of this\n operation, the port connecting the router with the\n subnet is removed from the subnet for the\n network.\n This example removes an interface from a\n router:\n PUT \/v2.0\/routers\/{router_id}\/remove_router_interface\nAccept: application\/json\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}\n", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\",\n \"tenant_id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\",\n \"port_id\": \"3a44f4e5-1694-493a-a1fb-393881c673a4\",\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"Floating IPs list", "description":"\n A list of floating IPs.\n", "uriTemplate":"/v2.0/floatingips", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List floating IPs", "description":"\n \n Lists floating IPs that are accessible to the tenant who\n submits the request.\n \n \n Default policy settings return only those floating IPs that\n are owned by the tenant who submits the request, unless an\n admin user submits the request.\n \n This example request lists floating IPs in JSON\n format:\n GET \/v2.0\/floatingips\nAccept: application\/json\n \n Use the fields query parameter to control which\n fields are returned in the response body. Additionally, you\n can filter results by using query string parameters. For\n information, see Filtering and Column Selection.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingips\": [\n {\n \"router_id\": \"d23abc8d-2991-4a55-ba98-2aaea84cc72f\",\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\",\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"fixed_ip_address\": \"10.0.0.3\",\n \"floating_ip_address\": \"172.24.4.228\",\n \"port_id\": \"ce705c24-c1ef-408a-bda3-7bbd946164ab\",\n \"id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\",\n \"status\": \"ACTIVE\"\n },\n {\n \"router_id\": null,\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\",\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"fixed_ip_address\": null,\n \"floating_ip_address\": \"172.24.4.227\",\n \"port_id\": null,\n \"id\": \"61cea855-49cb-4846-997d-801b70c71bdd\",\n \"status\": \"DOWN\"\n }\n ]\n}\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create floating IP", "description":"\n \n Creates a floating IP, and, if you specify port information,\n associates the floating IP with an internal port.\n \n \n To associate the floating IP with an internal port, specify\n the port ID attribute in the request body. If you do not\n specify a port ID in the request, you can issue a PUT\n request instead of a POST request.\n \n \n Default policy settings enable only administrative users to\n set floating IP addresses and some non-administrative users\n might require a floating IP address. If you do not specify a\n floating IP address in the request, the API automatically\n allocates one.\n \n \n By default, this operation associates the floating IP address\n with a single fixed IP address that is configured on an\n OpenStack Networking port. If a port has multiple IP\n addresses, you must specify the fixed_ip_address\n attribute in the request body to associate a specific fixed IP\n address with the floating IP address.\n \n \n You can create floating IPs on external networks only.\n \n \n You must configure an IP address with the internal OpenStack\n Networking port that is associated with the floating IP\n address.\n \n Error codes:\n \n \n \n 400 The operation returns this error code for\n one of these reasons:\n \n \n \n The specified network is not external, such as\n router:external=False.\n \n \n \n The specified internal OpenStack\n Networking port is not associated with the floating IP\n address.\n \n \n \n \n The requested floating IP address does not fall in the\n subnet range for the external network.\n \n \n \n \n The specified fixed IP address is not valid.\n \n \n \n \n \n 401 The operation is not authorized.\n \n \n \n 404 The specified port ID is not valid.\n \n \n \n \n 409 The operation returns this error code for\n one of these reasons:\n \n \n \n \n The requested floating IP address is already in use.\n \n \n \n \n The internal OpenStack Networking port and\n specified fixed IP address are already associated\n with another floating IP.\n \n \n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"port_id\": \"ce705c24-c1ef-408a-bda3-7bbd946164ab\"\n }\n}", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"fixed_ip_address\": \"10.0.0.3\",\n \"floating_ip_address\": \"172.24.4.228\",\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\",\n \"port_id\": \"ce705c24-c1ef-408a-bda3-7bbd946164ab\",\n \"router_id\": \"d23abc8d-2991-4a55-ba98-2aaea84cc72f\",\n \"status\": \"ACTIVE\",\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\"\n }\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"/v2.0/floatingips/{floatingip_id}", "parameters":{ "floatingip_id":{ "description":"The UUID of the floating\n IP.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show floating IP details", "description":"\n Shows details for a specified\n floating IP.\n Use the fields query parameter to\n control which fields are returned in the response\n body. For information, see Filtering and Column Selection.\n This example request shows details for a floating IP\n in JSON format. This example also filters the result\n by the fixed_ip_address and\n floating_ip_address fields.\n GET \/v2.0\/floatingips\/{floatingip_id}?fields=fixed_ip_address&fields=floating_ip_address\nAccept: application\/json\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"router_id\": \"d23abc8d-2991-4a55-ba98-2aaea84cc72f\",\n \"fixed_ip_address\": \"10.0.0.3\",\n \"floating_ip_address\": \"172.24.4.228\",\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\",\n \"status\": \"ACTIVE\",\n \"port_id\": \"ce705c24-c1ef-408a-bda3-7bbd946164ab\",\n \"id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\"\n }\n}\n", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update floating IP", "description":"\n Updates a floating IP and its\n association with an internal port.\n The association process is the same as the process\n for the create floating IP operation.\n To disassociate a floating IP from a port, set the\n port_id attribute to null or omit it\n from the request body.\n This example updates a floating IP:\n PUT \/v2.0\/floatingips\/{floatingip_id}\nAccept: application\/json\n Depending on the request body that you submit, this\n request associates a port with or disassociates a port\n from a floating IP.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"port_id\": \"fc861431-0e6c-4842-a0ed-e2363f9bc3a8\"\n }\n}", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"port_id\": null\n }\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"router_id\": \"d23abc8d-2991-4a55-ba98-2aaea84cc72f\",\n \"fixed_ip_address\": \"10.0.0.4\",\n \"floating_ip_address\": \"172.24.4.228\",\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\",\n \"status\": \"ACTIVE\",\n \"port_id\": \"fc861431-0e6c-4842-a0ed-e2363f9bc3a8\",\n \"id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\"\n }\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"floatingip\": {\n \"floating_network_id\": \"376da547-b977-4cfe-9cba-275c80debf57\",\n \"router_id\": \"d23abc8d-2991-4a55-ba98-2aaea84cc72f\",\n \"fixed_ip_address\": null,\n \"floating_ip_address\": \"172.24.4.228\",\n \"tenant_id\": \"4969c491a3c74ee4af974e6d800c62de\",\n \"status\": \"ACTIVE\",\n \"port_id\": null,\n \"id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\"\n }\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete floating IP", "description":"\n Deletes a floating IP and, if\n present, its associated port.\n This example deletes a floating IP:\n DELETE \/v2.0\/floatingips\/{floatingip_id}\nAccept: application\/json", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }