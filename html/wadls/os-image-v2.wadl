<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2012-2015 OpenStack Foundation, All Rights Reserved -->
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entities with xmllint         -->
<!--                                                       -->
<!--        xmllint -noent os-image-v2.wadl                -->
<!--*******************************************************-->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <wadl:grammars xmlns:db="http://docbook.org/ns/docbook"
                  xmlns="http://wadl.dev.java.net/2009/02">
      <wadl:include href="56090-os-image-v2-xsd-1.xsd"/>
      <wadl:include href="56090-os-image-v2-xsd-2.xsd"/>
   </wadl:grammars>
   <!--*******************************************************-->
   <!--             All Resources                             -->
   <!--*******************************************************-->
   <resources xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:db="http://docbook.org/ns/docbook"
              xmlns:common="http://docs.openstack.org/common/api/v1.0"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:imageapi="http://docs.openstack.org/image/api/v2"
              xmlns:csapi="http://docs.openstack.org/image/api/v2"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://glance.example.com/"
              xml:id="os-image-v2">
      <resource id="versions" path="/">
         <method name="GET" rax:id="listVersions-image-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List API versions">
               <para role="shortdesc">Lists information about all Image
            service API versions.
         </para>
            </wadl:doc>
            <response status="200 300">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "versions": [
        {
            "status": "CURRENT",
            "id": "v2.2",
            "links": [
                {
                    "href": "http://23.253.228.211:9292/v2/",
                    "rel": "self"
                }
            ]
        },
        {
            "status": "SUPPORTED",
            "id": "v2.1",
            "links": [
                {
                    "href": "http://23.253.228.211:9292/v2/",
                    "rel": "self"
                }
            ]
        },
        {
            "status": "SUPPORTED",
            "id": "v2.0",
            "links": [
                {
                    "href": "http://23.253.228.211:9292/v2/",
                    "rel": "self"
                }
            ]
        },
        {
            "status": "SUPPORTED",
            "id": "v1.1",
            "links": [
                {
                    "href": "http://23.253.228.211:9292/v1/",
                    "rel": "self"
                }
            ]
        },
        {
            "status": "SUPPORTED",
            "id": "v1.0",
            "links": [
                {
                    "href": "http://23.253.228.211:9292/v1/",
                    "rel": "self"
                }
            ]
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
         
      
      <resource id="Images" path="/v2/images">
         <method name="GET" rax:id="listImages-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List images">
               <para role="shortdesc">Lists public virtual machine (VM)
            images. (Since Image API v2.0.)
         </para>
               <para>
            Returns a subset of the larger collection of images and a link
            that you can use to get the next set of images. You should always
            check for the presence of a <code>next</code> link and use it as
            the URI in a subsequent HTTP GET request. You should follow this
            pattern until a <code>next</code> link is no longer provided. The
            next link preserves any query parameters that you send in your
            initial request. You can use the <code>first</code> link to jump
            back to the first page of the collection. If you prefer to
            paginate through images manually, use the <code>limit</code> and
            <code>marker</code> parameters.
         </para>
               <para>
            The list operation accepts several types of query parameters that
            let you filter the results of the returned collection.
         </para>
               <para>
            A client can provide direct comparison filters using most image
            attributes, such as <code>name=Ubuntu</code>,
            <code>visibility=public</code>, and so on. A client cannot filter
            on tags or anything defined as a <code>link</code> in the json-
            schema, such as self, file, or schema.
         </para>
               <para>You can use the <code>size_min</code> and
            <code>size_max</code> query parameters to perform
            greater-than and less-than filtering of images based
            on their <code>size</code> attribute. The size is
            measured in bytes and refers to the size of an image
            when it is stored on disk.
         </para>
               <para>For example, sending a <code>size_min</code> filter
            of 1048576 and <code>size_max</code> of 4194304
            filters the container to include only images that are
            between 1 and 4 MB.
         </para>
               <para>You can see a list of VM images which status is in
            <code>active</code>, <code>queued</code>, or
            <code>saving</code>.
         </para>
               <para>
            You can use query parameters to sort the results of this operation.
         </para>
               <itemizedlist>
                  <listitem>
                     <para>
                        <code>sort_key</code>. Sorts by the requested image
                  attribute. Sorts in the natural sorting direction of the image attribute that
                  is provided as the <code>sort_key</code>.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                        <code>sort_dir</code>. Sorts in a specified sort direction.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                        <code>sort</code>. Sorts by one or more sets of attribute
                  and sort direction combinations. If you omit the sort direction in a set,
                  the default is <code>desc</code>.
               </para>
                  </listitem>
               </itemizedlist>
               <para>To specify the <code>sort_key</code> and
            <code>sort_dir</code> query parameters to sort the results:
         </para>
               <programlisting language="json">GET /v2/images?sort_key=name&amp;sort_dir=asc&amp;sort_key=status&amp;sort_dir=desc</programlisting>
               <para>To specify the <code>sort</code> query parameter to sort the results:
         </para>
               <programlisting language="json">GET /v2/images?sort=name:asc,status:desc</programlisting>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
            
                  <param name="limit" style="query" required="false" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Requests a specified page size of returned items from the query.
            Returns a number of items up to the specified limit value. Use the
            <code>limit</code> parameter to make an initial limited request
            and use the ID of the last-seen item from the response as the
            <code>marker</code> parameter value in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Specifies the ID of the last-seen item. Use the <code>limit</code>
            parameter to make an initial limited request and use the ID of the
            last-seen item from the response as the <code>marker</code>
            parameter value in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
            
                  <param name="name" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images with the specified name.
   </para>
                        <para>
      A valid value is the name of the image as a string.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="visibility"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images with the specified image visibility value or values.
   </para>
                        <para>
      Valid values are <code>public</code>, <code>private</code>, and
      <code>shared</code>. If you omit this parameter, the response shows
      <code>public</code>, <code>private</code>, and <code>shared</code>
      images with <code>accepted</code> member status.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="member_status"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images with the specified member status.
   </para>
                        <para>
      A valid value is <code>accepted</code>, <code>pending</code>,
      <code>rejected</code>, or <code>all</code>. Default is
      <code>accepted</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="owner"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images that are shared with the specified owner.
   </para>
                        <para>A valid value is a tenant ID.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="status" style="query" required="false" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images with the specified image status.
   </para>
                        <para>
      A valid value is <code>queued</code>, <code>saving</code>,
      <code>active</code>, <code>killed</code>, <code>deleted</code>, or
      <code>pending_delete</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="size_min"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filter parameter.
   </para>
                        <para>
      Shows only images with the specified minimum image size.
   </para>
                        <para>
      A valid value is the minimum size of the image,
      in bytes.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="size_max"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter.
   </para>
                        <para>
      Shows only images with the specified maximum image size.
   </para>
                        <para>A valid valud is the maximum size of the image,
      in bytes.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="sort_key"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sorts by the requested image attribute. Accepted values are
      <code>name</code>, <code>status</code>, <code>container_format</code>,
      <code>disk_format</code>, <code>size</code>, <code>id</code>,
      <code>created_at</code>, and <code>updated_at</code>. Default is
      <code>created_at</code>. The API uses the natural sorting direction of
      the image attribute that is provided as the <code>sort_key</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="sort_dir"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sorts by one or more sets of attribute and sort direction combinations.
      If you omit the sort direction in a set, the default is <code>desc</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="sort"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sorts by one or more attribute and sort direction combinations. You can
      also set multiple sort keys and directions. Default direction is
      <code>desc</code>.
   </para>
                        <para>For example:</para>
                        <programlisting language="json">GET /v2/images?sort=name:asc,status:desc</programlisting>
                     </wadl:doc>
                  </param>
                  <param name="tag"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Image tag. For example, <code>?tag="cirros"</code>.
   </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "images": [
        {
            "status": "active",
            "name": "cirros-0.3.2-x86_64-disk",
            "tags": [],
            "container_format": "bare",
            "created_at": "2014-11-07T17:07:06Z",
            "disk_format": "qcow2",
            "updated_at": "2014-11-07T17:19:09Z",
            "visibility": "public",
            "self": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27",
            "min_disk": 0,
            "protected": false,
            "id": "1bea47ed-f6a9-463b-b423-14b9cca9ad27",
            "file": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27/file",
            "checksum": "64d7c1cd2b6f60c92c14662941cb7913",
            "owner": "5ef70662f8b34079a6eddb8da9d75fe8",
            "size": 13167616,
            "min_ram": 0,
            "schema": "/v2/schemas/image",
            "virtual_size": null
        },
        {
            "status": "active",
            "name": "F17-x86_64-cfntools",
            "tags": [],
            "container_format": "bare",
            "created_at": "2014-10-30T08:23:39Z",
            "disk_format": "qcow2",
            "updated_at": "2014-11-03T16:40:10Z",
            "visibility": "public",
            "self": "/v2/images/781b3762-9469-4cec-b58d-3349e5de4e9c",
            "min_disk": 0,
            "protected": false,
            "id": "781b3762-9469-4cec-b58d-3349e5de4e9c",
            "file": "/v2/images/781b3762-9469-4cec-b58d-3349e5de4e9c/file",
            "checksum": "afab0f79bac770d61d24b4d0560b5f70",
            "owner": "5ef70662f8b34079a6eddb8da9d75fe8",
            "size": 476704768,
            "min_ram": 0,
            "schema": "/v2/schemas/image",
            "virtual_size": null
        }
    ],
    "schema": "/v2/schemas/images",
    "first": "/v2/images"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="images" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An <code>images</code> object.</para>
                     </wadl:doc>
                  </param> 
                  <param name="status" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image status.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="name" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="tags" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image tags.</para>
                     </wadl:doc>
                  </param> 
                  <param name="container_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The container format of image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="created_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was created.</para>
                     </wadl:doc>
                  </param> 
                  <param name="disk_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The disk format of the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was last updated.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_disk" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The minimum disk size in GB that is required to boot the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Indicates whether the image can be deleted.</para>
                     </wadl:doc>
                  </param> 
                  <param name="id" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique ID for the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_ram" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The minimum amount of RAM in MB that is required to boot the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="checksum" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of the image data used. The Image service uses this value for
      verification.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="owner" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the owner, or tenant, of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image visibility.</para>
                     </wadl:doc>
                  </param> 
                  <param name="virtual_size"
                         style="plain"
                         required="true"
                         type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The virtual size of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="size" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The size of the image data, in bytes.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="properties" style="plain" required="true" type="xsd:dict">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Properties, if any, that are associated with the image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="url" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="metadata" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The location metadata.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="direct_url"
                         style="plain"
                         type="xsd:string"
                         required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="self" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="file" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image file.</para>
                     </wadl:doc>
                  </param> 
                  <param name="schema" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for schema of the virtual machine image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="schema" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for schema of the virtual machine images.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="first" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the first page of response.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="POST" rax:id="createImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create image">
               <para role="shortdesc">Creates a virtual machine (VM)
            image. (Since Image API v2.0.)
         </para>
               <para>Created with a <code>Location</code> header that
            contains the newly-created URI for the image. Response
            body represents the created image entity.
         </para>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>With correct permissions, you can see
                  the image status as <code>queued</code> through API
                  calls.
               </para>
                  </listitem>
                  <listitem>
                     <para>With correct permissions, you can see
                  the image status as <code>active</code> through API
                  calls if you created the image with
                  <code>Location</code> header.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="image">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "name": "Ubuntu 12.10",
    "tags": [
        "ubuntu",
        "quantal"
    ],
    "container_format": "bare",
    "disk_format": "qcow2",
    "visibility": "private",
    "min_disk": 0,
    "protected": false,
    "min_ram": 0
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="name" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Name for the image. The
                  name of an image is not unique to an Image
                  service node. The API cannot expect users
                  to know the names of images owned by
                  others.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="id" style="plain" type="csapi:uuid" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image
                  ID.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="visibility"
                         style="plain"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image visibility. Public or private.
                  Default is public.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="tags" style="plain" type="xsd:dict" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image tags.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="container_format"
                         style="plain"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Format of the container. A valid value is <code>ami</code>,
      <code>ari</code>, <code>aki</code>, <code>bare</code>, or
      <code>ovf</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="disk_format"
                         style="plain"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Format of the disk. A valid value is <code>ami</code>, <code>ari</code>,
      <code>aki</code>, <code>vhd</code>, <code>vmdk</code>, <code>raw</code>,
      <code>qcow2</code>, <code>vdi</code>, or <code>iso</code>.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="min_disk" style="plain" type="xsd:int" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Amount of disk space in GB that is required to boot the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_ram" style="plain" type="xsd:int" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Amount of RAM in MB that is required to boot the image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="protected" style="plain" type="xsd:bool" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If true, image is not deletable.</para>
                     </wadl:doc>
                  </param> 
                  <param name="properties"
                         style="plain"
                         type="xsd:dict"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Properties, if any, that are associated with the image.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "queued",
    "name": "Ubuntu 12.10",
    "tags": [
        "ubuntu",
        "quantal"
    ],
    "container_format": "bare",
    "created_at": "2014-11-11T20:47:55Z",
    "disk_format": "qcow2",
    "updated_at": "2014-11-11T20:47:55Z",
    "visibility": "private",
    "self": "/v2/images/b2173dd3-7ad6-4362-baa6-a68bce3565ca",
    "min_disk": 0,
    "protected": false,
    "id": "b2173dd3-7ad6-4362-baa6-a68bce3565ca",
    "file": "/v2/images/b2173dd3-7ad6-4362-baa6-a68bce3565ca/file",
    "owner": "b4eedccc6fb74fa8a7ad6b08382b852b",
    "min_ram": 0,
    "schema": "/v2/schemas/image",
    "size": null,
    "checksum": null,
    "virtual_size": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image status.</para>
                     </wadl:doc>
                  </param> 
                  <param name="container_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The container format of image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="min_ram" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The minimum amount of RAM in MB that is required to boot the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was last updated.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="owner" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the owner, or tenant, of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="min_disk" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The minimum disk size in GB that is required to boot the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="tags" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image tags.</para>
                     </wadl:doc>
                  </param> 
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image visibility.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="id" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique ID for the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="size" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The size of the image data, in bytes.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="virtual_size"
                         style="plain"
                         required="true"
                         type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The virtual size of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="name" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="checksum" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of the image data used. The Image service uses this value for
      verification.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="created_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was created.</para>
                     </wadl:doc>
                  </param> 
                  <param name="disk_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The disk format of the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="properties" style="plain" required="true" type="xsd:dict">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Properties, if any, that are associated with the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Indicates whether the image can be deleted.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="location"
                         style="header"
                         type="xsd:string"
                         required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store.</para>
                     </wadl:doc>
                  </param> 
                  <param name="self" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="file" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image file.</para>
                     </wadl:doc>
                  </param> 
                  <param name="schema" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for schema of the virtual machine image.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
      <resource path="/v2/images/{image_id}" id="image_id">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <method name="GET" rax:id="getImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get image details">
               <para role="shortdesc">Gets details for a specified image.
            (Since Image API v2.0.)
         </para>
               <para>Response body is a single image entity.</para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "active",
    "name": "cirros-0.3.2-x86_64-disk",
    "tags": [],
    "container_format": "bare",
    "created_at": "2014-05-05T17:15:10Z",
    "disk_format": "qcow2",
    "updated_at": "2014-05-05T17:15:11Z",
    "visibility": "public",
    "self": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "min_disk": 0,
    "protected": false,
    "id": "1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "file": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27/file",
    "checksum": "64d7c1cd2b6f60c92c14662941cb7913",
    "owner": "5ef70662f8b34079a6eddb8da9d75fe8",
    "size": 13167616,
    "min_ram": 0,
    "schema": "/v2/schemas/image",
    "virtual_size": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image status.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="name" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="tags" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image tags.</para>
                     </wadl:doc>
                  </param> 
                  <param name="container_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The container format of image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="created_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was created.</para>
                     </wadl:doc>
                  </param> 
                  <param name="disk_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The disk format of the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was last updated.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_disk" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The minimum disk size in GB that is required to boot the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Indicates whether the image can be deleted.</para>
                     </wadl:doc>
                  </param> 
                  <param name="id" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique ID for the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_ram" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The minimum amount of RAM in MB that is required to boot the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="checksum" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of the image data used. The Image service uses this value for
      verification.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="owner" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the owner, or tenant, of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image visibility.</para>
                     </wadl:doc>
                  </param> 
                  <param name="size" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The size of the image data, in bytes.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="url" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="metadata" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The location metadata.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="properties" style="plain" required="true" type="xsd:dict">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Properties, if any, that are associated with the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="direct_url"
                         style="plain"
                         type="xsd:string"
                         required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="self" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="file" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image file.</para>
                     </wadl:doc>
                  </param> 
                  <param name="schema" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for schema of the virtual machine image.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="404">
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
         </method>
         <method name="PATCH" rax:id="updateImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update image">
               <para role="shortdesc">
            Updates a specified image. (Since Image API v2.0.)
         </para>
               <para>
            Depending on the referenced target location, this operation
            performs one of the following functions:
         </para>
               <itemizedlist>
                  <listitem>
                     <para>
                  The target location is an array index. A new value is
                  inserted into the array at the specified index.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  The target location is an object member that does not
                  exist. A new member is added to the object.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  The target location is an object member that exists.
                  The member value is replaced.
               </para>
                  </listitem>
               </itemizedlist>
               <para>
            The operation object MUST contain a <code>value</code> member that
            specifies the value to add. For example:
         </para>
               <programlisting language="json">{
   "op": "add",
   "path": "/a/b/c",
   "value": [
      "foo",
      "bar"
   ]
}</programlisting>
               <para>
            The target location MUST reference one of these values:
         </para>
               <itemizedlist>
                  <listitem>
                     <para>
                  The root of the target document. The specified value is the
                  entire content of the target document.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  A member to add to an object. The specified value is added
                  to that object at the specified location. If the member
                  already exists, it is replaced by the specified value.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  An element to add to the array. The specified value is added
                  to the array at the specified location. Any element that is
                  at or above the specified index is shifted one position to
                  the right. The specified index MUST NOT be greater than the
                  number of elements in the array. If the hyphen (-) character
                  is used to index the end of the array (see [RFC6901]), the
                  value is appended to the array.
               </para>
                  </listitem>
               </itemizedlist>
               <para>
            Because this operation adds to existing objects and arrays, its
            target location often does not exist.
         </para>
               <para>
            The request body must conform to one of these media types:
         </para>
               <itemizedlist spacing="compact">
                  <listitem>
                     <para>
                        <code>application/openstack-images-v2.0-json-patch</code>
                     </para>
                  </listitem>
                  <listitem>
                     <para>
                        <code>application/openstack-images-v2.1-json-patch</code>
                  (Since Image API v2.2.)
               </para>
                  </listitem>
               </itemizedlist>
               <para>
            You can also use the <command>PATCH</command> method to add or remove image
            properties.
         </para>
               <para>
            For information about the <command>PATCH</command> method and the available media
            types, see <link xlink:href="http://specs.openstack.org/openstack/glance-specs/specs/api/v2/http-patch-image-api-v2.html">Image API v2
            HTTP PATCH media types</link>.
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  When you add or replace a location to the specified image,
                  you must set the <code>disk_format</code> and
                  <code>container_format</code> parameters in the image.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  When you replace a location, a location must be previously
                  set in the image.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  With correct permissions, you can view the updated values of
                  the attributes of the image.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  After you add a location to an image that had no location
                  and with correct permissions, you can use API calls to view
                  the image status as <code>active</code>.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  After you remove all locations from the image and with
                  correct permissions, you can use API calls to view the image
                  status as <code>queued</code>.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Troubleshooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  If you cannot update locations, your request might be
                  missing some information. Make sure that you meet the
                  preconditions and run the request again. If the request
                  fails again, review your API request.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">[
    {
        "op": "replace",
        "path": "/name",
        "value": "Fedora 17"
    },
    {
        "op": "replace",
        "path": "/tags",
        "value": [
            "fedora",
            "beefy"
        ]
    }
]</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="path" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image's property.</para>
                     </wadl:doc>
                  </param> 
                  <param name="value" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Value of image property used in add or replace operations expressed in
      JSON notation. For example, you must enclose strings in quotation marks,
      and you do not enclose numeric values in quotation marks.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="op" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The operation. A valid value is:</para>
                        <para>
                           <code>add</code>. Adds a property or location in the
      specified image.
   </para>
                        <para>
                           <code>remove</code>. Removes the specified image's
      property or location.
   </para>
                        <para>
                           <code>replace</code>. Replaces the value of a specified
      image's property or location.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="url" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external
      store.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="metadata" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The location metadata.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
    "name": "Fedora 17",
    "status": "active",
    "visibility": "public",
    "size": 2254249,
    "checksum": "2cec138d7dae2aa59038ef8c9aec2390",
    "tags": [
        "fedora",
        "beefy"
    ],
    "created_at": "2012-08-10T19:23:50Z",
    "updated_at": "2012-08-12T11:11:33Z",
    "self": "/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
    "file": "/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
    "schema": "/v2/schemas/image",
    "owner": null,
    "min_ram": null,
    "min_disk": null,
    "disk_format": null,
    "virtual_size": null,
    "container_format": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image status.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="name" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="tags" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Image tags.</para>
                     </wadl:doc>
                  </param> 
                  <param name="container_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The container format of image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="created_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was created.</para>
                     </wadl:doc>
                  </param> 
                  <param name="disk_format"
                         style="plain"
                         required="true"
                         type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The disk format of the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:datetime">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The date and time when the image was last updated.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_disk" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The minimum disk size in GB that is required to boot the image.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="protected"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Indicates whether the image can be deleted.</para>
                     </wadl:doc>
                  </param> 
                  <param name="id" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique ID for the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="min_ram" style="plain" required="true" type="csapi:uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The minimum amount of RAM in MB that is required to boot the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="checksum" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of the image data used. The Image service uses this value for
      verification.
   </para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="owner" style="plain" required="true" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the owner, or tenant, of the image.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="visibility"
                         style="plain"
                         required="true"
                         type="xsd:boolean">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The image visibility.</para>
                     </wadl:doc>
                  </param> 
                  <param name="size" style="plain" required="true" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The size of the image data, in bytes.</para>
                        <para>
      If this field has no value, its value is <code>null</code> (JSON null data type).
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="url" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="metadata" style="plain" type="xsd:dict" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The location metadata.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="properties" style="plain" required="true" type="xsd:dict">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Properties, if any, that are associated with the image.</para>
                     </wadl:doc>
                  </param> 
                  <param name="direct_url"
                         style="plain"
                         type="xsd:string"
                         required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service's configuration
      file.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="self" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image.</para>
                     </wadl:doc>
                  </param>
            
                  <param name="file" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for the virtual machine image file.</para>
                     </wadl:doc>
                  </param> 
                  <param name="schema" style="plain" type="xsd:string" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>URL for schema of the virtual machine image.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image">
               <para role="shortdesc">Deletes a specified image. (Since
            Image API v2.0.)
         </para>
               <para>You cannot delete images with the 'protected'
            attribute set to true (boolean).
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>You can delete an image in all status
                  except <code>deleted</code>.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must first set the 'protected' attribute
                  to <code>false</code> (boolean) and then perform
                  the delete.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The response is empty and returns the
                  HTTP 204 status code.
               </para>
                  </listitem>
                  <listitem>
                     <para>The image is deleted in images index.
               </para>
                  </listitem>
                  <listitem>
                     <para>The binary image data managed by OpenStack
                  Image service is deleted from the storage node if the
                  deleted image stores image data in the node.
               </para>
                  </listitem>
               </itemizedlist>
               <para>TroubleShooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  The response returns the HTTP 403 status code when the
                  <code>protected</code> attribute is set to
                  <code>true</code> even if you have correct permissions.
                  Ensure that you meet the preconditions and run the request
                  again. If the request fails again, review your API request.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="204"/>
      
            <response status="403">
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
         </method>
      </resource>
                

               
               
               
               <resource id="reactivate" path="/v2/images/{image_id}/actions/reactivate">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <method name="POST" rax:id="reactivateImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Reactivate image">
               <para role="shortdesc">Reactivates a specified image.
            (Since Image API v2.0.)
         </para>
               <para>
            The reactivate operation returns an error if the image status is
            not <code>active</code> or <code>deactivated</code>.
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="204">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "active",
    "name": "cirros-0.3.2-x86_64-disk",
    "tags": [],
    "container_format": "bare",
    "created_at": "2014-05-05T17:15:10Z",
    "disk_format": "qcow2",
    "updated_at": "2014-05-05T17:15:11Z",
    "visibility": "public",
    "self": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "min_disk": 0,
    "protected": false,
    "id": "1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "file": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27/file",
    "checksum": "64d7c1cd2b6f60c92c14662941cb7913",
    "owner": "5ef70662f8b34079a6eddb8da9d75fe8",
    "size": 13167616,
    "min_ram": 0,
    "schema": "/v2/schemas/image",
    "virtual_size": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                     
                  <resource id="deactivate" path="/v2/images/{image_id}/actions/deactivate">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <method name="POST" rax:id="deactivateImage-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Deactivate image">
               <para role="shortdesc">Deactivates a specified image.
            (Since Image API v2.0.)
         </para>
               <para>
            If you try to download a deactivated image, the 403 Forbidden
            error is returned. Also, image locations are not visible for
            deactivated images unless the user is an administrative user.
         </para>
               <para>
            The deactivate operation returns an error if the image status is
            not <code>active</code> or <code>deactivated</code>.
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="204">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "deactivated",
    "name": "cirros-0.3.2-x86_64-disk",
    "tags": [],
    "container_format": "bare",
    "created_at": "2014-05-05T17:15:10Z",
    "disk_format": "qcow2",
    "updated_at": "2014-05-05T17:15:11Z",
    "visibility": "public",
    "self": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "min_disk": 0,
    "protected": false,
    "id": "1bea47ed-f6a9-463b-b423-14b9cca9ad27",
    "file": "/v2/images/1bea47ed-f6a9-463b-b423-14b9cca9ad27/file",
    "checksum": "64d7c1cd2b6f60c92c14662941cb7913",
    "owner": "5ef70662f8b34079a6eddb8da9d75fe8",
    "size": 13167616,
    "min_ram": 0,
    "schema": "/v2/schemas/image",
    "virtual_size": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                     
                  
               <resource id="file" path="/v2/images/{image_id}/file">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <method name="PUT" rax:id="storeImageFile-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Upload binary image data">
               <para role="shortdesc">Uploads binary image data. (Since
            Image API v2.0.)
         </para>
               <para>Set the <code>Content-Type</code> request header to
            <code>application/octet-stream</code>.
         </para>
               <para>Example call: <code>curl -i -X PUT -H "X-Auth-Token:
            $token" -H "Content-Type:
            application/octet-stream" -d
            @/home/glance/ubuntu-12.10.qcow2
            $image_url/v2/images/{image_id}/file</code>
               </para>
               <para>Preconditions</para>
               <para>
            Before you can store binary image data, you must meet the
            following preconditions:
         </para>
               <itemizedlist>
                  <listitem>
                     <para>
                  The specified image must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  You must set the disk and container formats in the image.
               </para>
                  </listitem>
                  <listitem>
                     <para>The image status must be <code>queued</code>.
               </para>
                  </listitem>
                  <listitem>
                     <para>Your image storage quota must be sufficient.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  The size of the data that you want to store must not exceed
                  the size that the OpenStack Image service allows.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>With correct permissions, you can see the
                  image status as <code>active</code> through API calls.
               </para>
                  </listitem>
                  <listitem>
                     <para>With correct access, you can see the stored
                  data in the storage system that OpenStack Image service
                  manages.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Troubleshooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  If you cannot store the data, your request might lack
                  information or you exceeded your allotted quota. Ensure that
                  you meet the preconditions and run the request again. If the
                  request fails again, review your API request.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  The storage back ends for storing the data must have enough
                  free storage space to accommodate the size of the data.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="204"/>
         </method>
         <method name="GET" rax:id="getImageFile-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Download binary image data">
               <para role="shortdesc">Downloads binary image data. (Since
            Image API v2.0.)
         </para>
               <para>Example call: <code>curl -i -X GET -H "X-Auth-Token:
            $token"
            $image_url/v2/images/{image_id}/file</code>
               </para>
               <para>
            The response body contains the raw binary data that represents the
            actual virtual disk. The <code>Content-Type</code> header contains
            the value <code>application/octet-stream</code>. The <code>Content-MD5</code> header contains an MD5 checksum of the image
            data. Clients are encouraged to verify the integrity of the image
            data they receive by using this checksum.
         </para>
               <para/>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified images must exist.</para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>You can download the binary image data
                  in your machine if the specified image has image
                  data.
               </para>
                  </listitem>
                  <listitem>
                     <para>If image data exists, the call returns the
                  HTTP <code>200</code> status code.
               </para>
                  </listitem>
                  <listitem>
                     <para>If no image data exists, the call returns
                  the HTTP <code>204</code> status code.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
            
                  <param name="Content-Range"
                         style="header"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"
                               xml:lang="EN"
                               title="Content-Range header">
                        <para>
      The content range of image data. For details, see <link xlink:href="http://tools.ietf.org/html/rfc7233">Hypertext Transfer
      Protocol (HTTP/1.1): Range Requests</link>.
   </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200 204"/> 
            <response status="403">
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
         </method>
      </resource>
                  
                  
               
               <resource path="/v2/images/{image_id}/tags/{tag}" id="tag">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <param name="tag" style="template" type="xsd:string">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Tag">
               <para>Image tag.</para>
            </wadl:doc>
         </param>
         <method name="PUT" rax:id="addImageTag-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add image tag">
               <para role="shortdesc">
            Adds a specified tag to a specified image. (Since Image API v2.0.)
         </para>
            </wadl:doc>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="deleteImageTag-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image tag">
               <para role="shortdesc">
            Deletes a specified tag from a specified image. (Since Image API
            v2.0.)
         </para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                     

                     
                     
                  
               <resource id="Members" path="/v2/images/{image_id}/members">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <method name="GET" rax:id="listImageMembers-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List image members">
               <para role="shortdesc">Lists the tenants with whom this
            image has been shared. (Since Image API v2.1.)
         </para>
               <para>If a user with whom this image is shared makes this
            call, the member list contains only information for
            that user.
         </para>
               <para>If a user with whom this image has not been shared
            makes this call, the call returns the HTTP 404 status
            code.
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must be the owner or a member of
                  the specified image.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "members": [
        {
            "created_at": "2013-10-07T17:58:03Z",
            "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
            "member_id": "123456789",
            "schema": "/v2/schemas/member",
            "status": "pending",
            "updated_at": "2013-10-07T17:58:03Z"
        },
        {
            "created_at": "2013-10-07T17:58:55Z",
            "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
            "member_id": "987654321",
            "schema": "/v2/schemas/member",
            "status": "accepted",
            "updated_at": "2013-10-08T12:08:55Z"
        }
    ],
    "schema": "/v2/schemas/members"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--  &memberListParameter; -->
                  <param required="true" name="schema" style="plain" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The URL for schema of the
                  members.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
            <response status="404"/>
         </method>
         <method name="POST" rax:id="createImageMember-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create image member">
               <para role="shortdesc">Adds a specified tenant ID as an
            image member. (Since Image API v2.1.)
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified images must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>You can only add a new member to an
                  image which 'visibility' attribute is <code>private</code>.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must be the owner of the specified
                  image.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>With correct permissions, you can see
                  the member status of the image as <code>pending</code>
                  through API calls.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Troubleshooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  Even if you have correct permissions, if the
                  <code>visibility</code> attribute is set to <code>public</code>, the request
                  returns the HTTP 403 error code. Ensure that you meet the preconditions
                  and run the request again. If the request fails again,
                  review your API request.
               </para>
                  </listitem>
                  <listitem>
                     <para>
                  If the specified member is already a member for the image,
                  the service returns the HTTP 409 Conflict error code. In
                  case you meant a different member, double-check that you
                  specified the correct member.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "member": "8989447062e04a818baf9e073fd04fa7"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "created_at": "2013-09-20T19:22:19Z",
    "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
    "member_id": "8989447062e04a818baf9e073fd04fa7",
    "schema": "/v2/schemas/member",
    "status": "pending",
    "updated_at": "2013-09-20T19:25:31Z"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--   &memberListParameter; -->
               </representation>
            </response>
            <response status="403">
               <representation mediaType="application/xml" element="csapi:invalidVisibility"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="409">
               <representation mediaType="application/xml" element="csapi:memberConflict"/>
               <representation mediaType="application/json"/>
            </response>
         </method>
      </resource>
      <resource path="/v2/images/{image_id}/members/{member_id}" id="member_id">
         <param name="image_id"
                style="template"
                type="csapi:uuid"
                required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Image ID">
               <para>
      Image ID stored through the image API. Typically a UUID.
   </para>
            </wadl:doc>
         </param>
         <param name="member_id" style="template" type="xsd:string">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Members">
               <para>
         Image member ID. For example, the tenant ID of the user with whom the
         image is being shared.
       </para>
            </wadl:doc>
         </param>
         <method name="GET" rax:id="getImageMember-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show image member details">
               <para role="shortdesc">Shows image member details.</para>
               <para>Response body is a single image member entity.
            (Since Image API v2.2.)
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must be the owner or a member of
                  the specified image.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "pending",
    "created_at": "2013-11-26T07:21:21Z",
    "updated_at": "2013-11-26T07:21:21Z",
    "image_id": "0ae74cc5-5147-4239-9ce2-b0c580f7067e",
    "member_id": "8989447062e04a818baf9e073fd04fa7",
    "schema": "/v2/schemas/member"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--  &memberListParameter; -->
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteImageMember-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image member">
               <para role="shortdesc">Deletes a specified tenant ID from
            the member list of the specified image. (Since Image
            API v2.1.)
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified image must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must be the owner of the specified
                  image.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified member is removed from
                  the image members.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Troubleshooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  Even if you have correct permissions, if you are not the
                  owner of the specified image, the request returns the HTTP
                  403 error code. Ensure that you meet the preconditions
                  and run the request again. If the request fails again,
                  review your API request.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="204"/>
            <response status="403">
               <representation mediaType="application/xml" element="csapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
         </method>
         <method name="PUT" rax:id="updateImageMember-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update image member">
               <para role="shortdesc">Sets the specified status for the
            specified member of the specified image. (Since Image
            API v2.1.)
         </para>
               <para>Preconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>The specified images must exist.
               </para>
                  </listitem>
                  <listitem>
                     <para>You must be a member of the
                  specified image.
               </para>
                  </listitem>
               </itemizedlist>
               <para>Synchronous Postconditions</para>
               <itemizedlist>
                  <listitem>
                     <para>If you update the member status to
                  <code>accepted</code> and have the correct permissions,
                  you see the image in list images responses.
               </para>
                  </listitem>
                  <listitem>
                     <para>With correct permissions, you can see
                  the updated member status of the image through API
                  calls.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "accepted"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param required="true" name="status" style="plain" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The status of this image
                  member.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "created_at": "2013-09-20T19:22:19Z",
    "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
    "member_id": "8989447062e04a818baf9e073fd04fa7",
    "schema": "/v2/schemas/member",
    "status": "accepted",
    "updated_at": "2013-09-20T20:15:31Z"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--  &memberListParameter; -->
               </representation>
            </response>
         </method>
      </resource>
                     

                     
                     
                     
                  
            <resource id="Tasks" path="/v2/tasks">
         <method name="POST" rax:id="createTasks-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create tasks">
               <para role="shortdesc">Creates a task.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "type": "import",
    "input": {
        "import_from": "http://example.com",
        "import_from_format": "qcow2",
        "image_properties": {
            "disk_format": "vhd",
            "container_format": "ovf"
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201">
      </response>
         </method>
         <method name="GET" rax:id="listTasks-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List tasks">
               <para role="shortdesc">Lists tasks.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
            
                  <param name="type"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filters by a specified task type. A valid value is <code>import</code>,
      <code>export</code>, or <code>clone</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="status"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Filters by a specified task status. A valid value is
      <code>pending</code>, <code>processing</code>, <code>success</code>, or
      <code>failure</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="sort_key"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sort key. A valid value is an attribute, such as <code>name</code>, for
      sorting. Default is <code>created_at</code>.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="sort_dir"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sort direction. A valid value is <code>asc</code>
      (ascending) or <code>desc</code> (descending). Default is
      <code>desc</code>.
   </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "tasks": [
        {
            "id": "cbc36478b0bd8e67e89469c7749d4127",
            "type": "import",
            "status": "pending"
        },
        {
            "id": "bbc36578b0bd8e67e89469c7749d4126",
            "type": "import",
            "status": "processing"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
            
            
            <resource path="/v2/tasks/{task_id}" id="task_id">
         <method name="GET" rax:id="showTasks-v2">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Show tasks">
               <para role="shortdesc">Shows details for a specified task.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
            
                  <param name="task_id"
                         style="plain"
                         required="true"
                         type="csapi:uuid"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The task ID.
   </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "e7e59ff6-fa2e-4075-87d3-1a1398a07dc3",
    "type": "import",
    "status": "pending"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
               
            
         
   </resources>
   <!--*******************************************************-->
   <!--               Resource Types                          -->
   <!--*******************************************************-->
   
   
   <!--*******************************************************-->
   <!--               All Methods                             -->
   <!--*******************************************************-->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listVersions-image-v2">
      
      <response status="200 300">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <!-- images methods -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listImages-v2">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="limit" style="query" required="false" type="xsd:int">
    
</param>
            <param name="marker" style="query" required="false" type="xsd:string">
    
</param>
            
            <param name="name" style="query" required="false" type="xsd:string">

</param>
            <param name="visibility"
                   style="query"
                   required="false"
                   type="imageapi:string">

</param>
            <param name="member_status"
                   style="query"
                   required="false"
                   type="imageapi:string">

</param>
            <param name="owner"
                   style="query"
                   required="false"
                   type="imageapi:string">

</param>
            <param name="status" style="query" required="false" type="xsd:int">

</param>
            <param name="size_min"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="size_max"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="sort_key"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="sort_dir"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="sort"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="tag"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="images" style="plain" required="true" type="xsd:string">

</param> 
            <param name="status" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="name" style="plain" required="true" type="xsd:string">

</param> 
            <param name="tags" style="plain" type="xsd:dict" required="true">

</param> 
            <param name="container_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="created_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="disk_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="min_disk" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="id" style="plain" required="true" type="csapi:uuid">

</param> 
            <param name="min_ram" style="plain" required="true" type="csapi:uuid">

</param>
            
            <param name="checksum" style="plain" required="true" type="xsd:string">

</param> 
            <param name="owner" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="virtual_size"
                   style="plain"
                   required="true"
                   type="xsd:int">

</param>
            
            <param name="size" style="plain" required="true" type="xsd:int">

</param> 
            <param name="properties" style="plain" required="true" type="xsd:dict">

</param>
            
            <param name="url" style="plain" type="xsd:string" required="true">

</param> 
            <param name="metadata" style="plain" type="xsd:dict" required="true">

</param>
            
            <param name="direct_url"
                   style="plain"
                   type="xsd:string"
                   required="true">

</param> 
            <param name="self" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="file" style="plain" type="xsd:string" required="true">

</param> 
            <param name="schema" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="schema" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="first" style="plain" type="xsd:string" required="true">

</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createImage-v2">
      
      <request>
         <representation mediaType="application/json" element="image">
            
            <param name="name" style="plain" type="xsd:string" required="true">
            
            </param>
            <param name="id" style="plain" type="csapi:uuid" required="false">
            
            </param>
            <param name="visibility"
                   style="plain"
                   type="xsd:string"
                   required="false">
            
            </param>
            <param name="tags" style="plain" type="xsd:dict" required="false">
            
            </param>
            
            <param name="container_format"
                   style="plain"
                   type="xsd:string"
                   required="false">

</param> 
            <param name="disk_format"
                   style="plain"
                   type="xsd:string"
                   required="false">

</param>
            
            <param name="min_disk" style="plain" type="xsd:int" required="false">

</param> 
            <param name="min_ram" style="plain" type="xsd:int" required="false">

</param>
            
            <param name="protected" style="plain" type="xsd:bool" required="false">

</param> 
            <param name="properties"
                   style="plain"
                   type="xsd:dict"
                   required="false">

</param>
         </representation>
      </request>
      <response status="201">
         <representation mediaType="application/json">
            
            
            <param name="status" style="plain" required="true" type="xsd:string">

</param> 
            <param name="container_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="min_ram" style="plain" required="true" type="csapi:uuid">

</param> 
            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param>
            
            <param name="owner" style="plain" required="true" type="xsd:string">

</param> 
            <param name="min_disk" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="tags" style="plain" type="xsd:dict" required="true">

</param> 
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param>
            
            <param name="id" style="plain" required="true" type="csapi:uuid">

</param> 
            <param name="size" style="plain" required="true" type="xsd:int">

</param> 
            <param name="virtual_size"
                   style="plain"
                   required="true"
                   type="xsd:int">

</param>
            
            <param name="name" style="plain" required="true" type="xsd:string">

</param> 
            <param name="checksum" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="created_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="disk_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="properties" style="plain" required="true" type="xsd:dict">

</param> 
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param>
            
            <param name="location"
                   style="header"
                   type="xsd:string"
                   required="true">

</param> 
            <param name="self" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="file" style="plain" type="xsd:string" required="true">

</param> 
            <param name="schema" style="plain" type="xsd:string" required="true">

</param>
         </representation>
      </response>
   </method>
   <!-- images/{image_id} methods -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PATCH"
           id="updateImage-v2">
      
      <request>
         <representation mediaType="application/json">
            
            
            <param name="path" style="plain" type="xsd:string" required="true">

</param> 
            <param name="value" style="plain" type="xsd:string" required="true">

</param> 
            <param name="op" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="url" style="plain" type="xsd:string" required="true">

</param> 
            <param name="metadata" style="plain" type="xsd:dict" required="true">

</param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="name" style="plain" required="true" type="xsd:string">

</param> 
            <param name="tags" style="plain" type="xsd:dict" required="true">

</param> 
            <param name="container_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="created_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="disk_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="min_disk" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="id" style="plain" required="true" type="csapi:uuid">

</param> 
            <param name="min_ram" style="plain" required="true" type="csapi:uuid">

</param>
            
            <param name="checksum" style="plain" required="true" type="xsd:string">

</param> 
            <param name="owner" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="size" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="url" style="plain" type="xsd:string" required="true">

</param> 
            <param name="metadata" style="plain" type="xsd:dict" required="true">

</param>
            
            <param name="properties" style="plain" required="true" type="xsd:dict">

</param> 
            <param name="direct_url"
                   style="plain"
                   type="xsd:string"
                   required="true">

</param> 
            <param name="self" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="file" style="plain" type="xsd:string" required="true">

</param> 
            <param name="schema" style="plain" type="xsd:string" required="true">

</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getImage-v2">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="name" style="plain" required="true" type="xsd:string">

</param> 
            <param name="tags" style="plain" type="xsd:dict" required="true">

</param> 
            <param name="container_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="created_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="disk_format"
                   style="plain"
                   required="true"
                   type="xsd:string">

</param>
            
            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:datetime">

</param> 
            <param name="min_disk" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="protected"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="id" style="plain" required="true" type="csapi:uuid">

</param> 
            <param name="min_ram" style="plain" required="true" type="csapi:uuid">

</param>
            
            <param name="checksum" style="plain" required="true" type="xsd:string">

</param> 
            <param name="owner" style="plain" required="true" type="xsd:string">

</param>
            
            <param name="visibility"
                   style="plain"
                   required="true"
                   type="xsd:boolean">

</param> 
            <param name="size" style="plain" required="true" type="xsd:int">

</param>
            
            <param name="url" style="plain" type="xsd:string" required="true">

</param> 
            <param name="metadata" style="plain" type="xsd:dict" required="true">

</param>
            
            <param name="properties" style="plain" required="true" type="xsd:dict">

</param> 
            <param name="direct_url"
                   style="plain"
                   type="xsd:string"
                   required="true">

</param> 
            <param name="self" style="plain" type="xsd:string" required="true">

</param>
            
            <param name="file" style="plain" type="xsd:string" required="true">

</param> 
            <param name="schema" style="plain" type="xsd:string" required="true">

</param>
         </representation>
      </response>
      
      <response status="404">
         <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
         <representation mediaType="application/json"/>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="reactivateImage-v2">
      
      <response status="204">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="deactivateImage-v2">
      
      <response status="204">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImage-v2">
      
      <response status="204"/>
      
      <response status="403">
         <representation mediaType="application/xml" element="imageapi:forbidden"/>
         <representation mediaType="application/json"/>
      </response>
   </method>
   <!-- images/{image_id}/file methods -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="storeImageFile-v2">
      
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getImageFile-v2">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="Content-Range"
                   style="header"
                   type="xsd:string"
                   required="false">

</param>
         </representation>
      </request>
      <response status="200 204"/> 
      <response status="403">
         <representation mediaType="application/xml" element="imageapi:forbidden"/>
         <representation mediaType="application/json"/>
      </response>
   </method>
   <!-- images/{image_id}/tags/{tag} methods -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="addImageTag-v2">
      
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImageTag-v2">
      
      <response status="204"/>
   </method>
   <!-- images/{image_id}/members methods -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getImageMember-v2">
      
      <response status="200">
         <representation mediaType="application/json">
            
           <!--  &memberListParameter; -->
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listImageMembers-v2">
      
      <response status="200">
         <representation mediaType="application/json">
            
           <!--  &memberListParameter; -->
            <param required="true" name="schema" style="plain" type="xsd:string">
            
            </param>
         </representation>
      </response>
      <response status="404"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createImageMember-v2">
      
      <request>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
          <!--   &memberListParameter; -->
         </representation>
      </response>
      <response status="403">
         <representation mediaType="application/xml" element="csapi:invalidVisibility"/>
         <representation mediaType="application/json"/>
      </response>
      <response status="409">
         <representation mediaType="application/xml" element="csapi:memberConflict"/>
         <representation mediaType="application/json"/>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateImageMember-v2">
      
      <request>
         <representation mediaType="application/json">
            
            <param required="true" name="status" style="plain" type="xsd:string">
            
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
           <!--  &memberListParameter; -->
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImageMember-v2">
      
      <response status="204"/>
      <response status="403">
         <representation mediaType="application/xml" element="csapi:forbidden"/>
         <representation mediaType="application/json"/>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listTasks-v2">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="type"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="status"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="sort_key"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
            <param name="sort_dir"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">

</param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createTasks-v2">
      
      <request>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="201">
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2"
           xmlns:csapi="http://docs.openstack.org/image/api/v2"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="showTasks-v2">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="task_id"
                   style="plain"
                   required="true"
                   type="csapi:uuid"
                   default="ALL">

</param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
</wadl:application>
